(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    192790,       4126]
NotebookOptionsPosition[    179284,       3898]
NotebookOutlinePosition[    179617,       3913]
CellTagsIndexPosition[    179574,       3910]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Teoria", "Title",ExpressionUUID->"b4ea0157-5618-4efd-83bb-25db5159cbe5"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"GF", "(", 
   SuperscriptBox["2", "m"], ")"}], 
  TraditionalForm]],ExpressionUUID->"f0e28698-7415-47ba-acf2-0348bac3efa0"]], \
"Chapter",ExpressionUUID->"413a8c52-f5fc-4e8f-a5bb-fcd0b5061987"],

Cell[CellGroupData[{

Cell[TextData[{
 "Formado com base em um ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "(", "x", ")"}], TraditionalForm]],ExpressionUUID->
  "a76f759a-388d-4b83-a6be-109039aaec24"],
 " primitivo"
}], "Subchapter",ExpressionUUID->"8e839a42-3b08-42d6-89b5-f1d6feef0d6a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"m", "=", "3"}], ";"}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"755843da-07db-4559-b935-563c81832484"],

Cell[BoxData[
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"1", "+", "X", "+", 
    SuperscriptBox["X", 
     RowBox[{" ", "3"}]]}]}], ";"}]], "Input",
 CellLabel->"In[2]:=",ExpressionUUID->"89d99013-ef95-456a-8f59-d6d2543b92e2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"subst", "=", 
   RowBox[{"p", "-", 
    SuperscriptBox["X", "m"]}]}], ";"}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"9e474936-e1d5-4a57-a624-50ac45e848e5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"subst\[Alpha]", "=", 
   RowBox[{"subst", "/.", 
    RowBox[{"X", "\[Rule]", "\[Alpha]"}]}]}], ";"}]], "Input",
 CellLabel->"In[4]:=",ExpressionUUID->"de30c1f6-259c-49be-84ae-a4b00462283c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "=", 
   RowBox[{
    SuperscriptBox["2", "m"], "-", "1"}]}], ";"}]], "Input",
 CellLabel->"In[5]:=",ExpressionUUID->"44ad576a-1d7f-497a-981c-4b4564810939"],

Cell[BoxData[
 RowBox[{
  RowBox[{"expansions", "[", "\"\<recalculate\>\"", "]"}], ";"}]], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"365244d7-baf0-442d-bba4-7e7e1e7a87e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Para definir um \[OpenCurlyDoubleQuote]field\[CloseCurlyDoubleQuote]", \
"Subchapter",ExpressionUUID->"1a082306-eda4-45eb-a1ba-b16f9794c23b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GF", "[", 
    RowBox[{"mNovo_", ",", "poly_"}], "]"}], "/;", 
   RowBox[{"Not", "[", 
    RowBox[{
     RowBox[{"PrimitivePolynomialQ", "[", 
      RowBox[{"poly", ",", "2"}], "]"}], "\[And]", 
     RowBox[{
      RowBox[{"Exponent", "[", 
       RowBox[{"poly", ",", "X"}], "]"}], "===", "mNovo"}]}], "]"}]}], ":=", 
  RowBox[{"Throw", "[", "\"\<Inconsistent GF call\>\"", "]"}]}]], "Input",
 CellLabel->"In[7]:=",ExpressionUUID->"b1644d01-cdf2-453c-9b3f-3e4be7f5fa63"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GF", "[", 
   RowBox[{"mNovo_", ",", "poly_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"m", "=", " ", "mNovo"}], ";", "\[IndentingNewLine]", 
     RowBox[{"p", "=", "poly"}], ";", "\[IndentingNewLine]", 
     RowBox[{"subst", "=", 
      RowBox[{"p", "-", " ", 
       SuperscriptBox["X", "m"]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"subst\[Alpha]", "=", 
      RowBox[{"subst", "/.", 
       RowBox[{"X", "\[Rule]", "\[Alpha]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"n", "=", 
      RowBox[{
       SuperscriptBox["2", "m"], "-", "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"expansions", "[", "\"\<recalculate\>\"", "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->"In[8]:=",ExpressionUUID->"a11395cc-cc28-4739-bac2-98510d63ba9e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["C\[IAcute]clico na multiplica\[CCedilla]\[ATilde]o (muito lento : \
desativado)", "Subchapter",ExpressionUUID->"3ee53f87-efa5-465d-8916-\
e86554605a8c"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"\[Alpha]", "/:", 
   SuperscriptBox["\[Alpha]", 
    RowBox[{"i_", "/;", 
     RowBox[{
      RowBox[{"i", ">", 
       RowBox[{"n", "-", "1"}]}], "||", 
      RowBox[{"i", "<", "0"}]}]}]], ":=", 
   SuperscriptBox["\[Alpha]", 
    RowBox[{"Mod", "[", 
     RowBox[{"i", ",", "n"}], "]"}]]}], " ", "*)"}]], "Input",
 CellLabel->"In[9]:=",ExpressionUUID->"322f6bf6-cdea-4767-985d-09dab0f3324e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Expand\[IAcute]vel em somas/pot\[EHat]ncia para pot\[EHat]ncias  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GreaterEqual]", " ", "m"}], TraditionalForm]],ExpressionUUID->
  "1fd1b366-f307-4a32-9bf5-f531d5e80534"]
}], "Subchapter",ExpressionUUID->"e0164b14-cd7f-4337-8066-56d30be20ee3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExpandAsSum", "[", "poly_", "]"}], ":=", 
  RowBox[{"Collect", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PolynomialMod", "[", 
     RowBox[{"poly", ",", "2"}], "]"}], ",", "\[IndentingNewLine]", "X", ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"PolynomialMod", "[", 
        RowBox[{"#", ",", "2"}], "]"}], "&"}], "@", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Head", "[", "#", "]"}], "===", "Plus"}], ",", 
        RowBox[{"ExpandAsSumHelper", "/@", "#"}], ",", 
        RowBox[{"ExpandAsSumHelper", "@", "#"}]}], " ", "]"}]}], "&"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->"In[10]:=",ExpressionUUID->"af765b0d-f7c3-4e46-a5e9-abecd9dfef97"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExpandAsPower", "[", "poly_", "]"}], ":=", 
  RowBox[{"Collect", "[", "\[IndentingNewLine]", 
   RowBox[{
   "poly", ",", "\[IndentingNewLine]", "X", ",", "\[IndentingNewLine]", 
    RowBox[{"ExpandAsPowerHelper", "@*", "ExpandAsSum"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->"In[11]:=",ExpressionUUID->"8061ca20-9562-47ad-aa68-6f8a8fbfcbca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"expansions", "[", "\"\<recalculate\>\"", "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ClearAll", "[", "ExpandAsSumHelper", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ClearAll", "[", "ExpandAsPowerHelper", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ExpandAsSumHelper", "[", "0", "]"}], "=", "0"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ExpandAsPowerHelper", "[", "0", "]"}], "=", "0"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Scan", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{"sumExpansion", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"PolynomialMod", "[", 
               RowBox[{"#", ",", "2"}], "]"}], "&"}], "[", 
             RowBox[{"#", "//.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  SuperscriptBox["\[Alpha]", "i_"], "/;", 
                  RowBox[{"i", "\[GreaterEqual]", 
                   RowBox[{"m", "+", "1"}]}]}], "\[RuleDelayed]", " ", 
                 RowBox[{"Expand", "[", 
                  RowBox[{"\[Alpha]", " ", 
                   RowBox[{"ExpandAsSumHelper", "[", 
                    SuperscriptBox["\[Alpha]", 
                    RowBox[{"i", "-", "1"}]], "]"}]}], "]"}]}], ",", 
                RowBox[{
                 SuperscriptBox["\[Alpha]", "m"], "\[Rule]", 
                 "subst\[Alpha]"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]",
            "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"ExpandAsSumHelper", "[", "#", "]"}], "=", 
            "sumExpansion"}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ExpandAsPowerHelper", "[", "sumExpansion", "]"}], "=", 
            "#"}], ";"}]}], "\[IndentingNewLine]", "]"}], "&"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         SuperscriptBox["\[Alpha]", "i"], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", 
           RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]",
       "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ExpandAsSumHelper", "[", 
       SuperscriptBox["\[Alpha]", "i_"], "]"}], ":=", 
      RowBox[{"ExpandAsSumHelper", "[", 
       SuperscriptBox["\[Alpha]", 
        RowBox[{"Mod", "[", 
         RowBox[{"i", ",", "n"}], "]"}]], "]"}]}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->"In[12]:=",ExpressionUUID->"78cd737f-4aa6-48e2-b81f-a5f66b5d64e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Conjugados de ",
 Cell[BoxData[
  FormBox["\[Beta]", TraditionalForm]],ExpressionUUID->
  "cace5e5e-b514-4b61-a6e4-9bfe15424d0b"],
 " s\[ATilde]o os ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Beta]", 
    RowBox[{"2", "j"}]], TraditionalForm]],ExpressionUUID->
  "9154e774-3c87-4224-a770-be540a74b6a9"]
}], "Subchapter",ExpressionUUID->"d4d9df03-1ce4-466e-9ed3-9e0e77b8977c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Conjugates", "[", "\[Beta]_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[Alpha]", "#"], "&"}], "/@", 
   RowBox[{"NestWhile", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "~", "Append", "~", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"Last", "@", "#"}]}], ",", "n"}], "]"}]}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"Exponent", "[", 
       RowBox[{
        RowBox[{"ExpandAsPower", "@", "\[Beta]"}], ",", "\[Alpha]"}], "]"}], 
      "}"}], ",", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"Last", "@", "#"}]}], ",", "n"}], "]"}], "\[Element]", 
        "#"}]}], "&"}]}], "]"}]}]}]], "Input",
 CellLabel->"In[13]:=",ExpressionUUID->"40590dc8-06ec-4134-8cc8-83bab33a1596"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cada elemento tem um polin\[OHat]mio m\[IAcute]nimo", "Subchapter",ExpressionUUID->"bf5897f1-15de-43a8-89c3-3beb77ca3cd5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MinPoly", "[", "\[Beta]_", "]"}], ":=", 
  RowBox[{"ExpandAsSum", "[", 
   RowBox[{"Times", "@@", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"X", "+", "#"}], "&"}], ",", 
      RowBox[{"Conjugates", "[", "\[Beta]", "]"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[14]:=",ExpressionUUID->"f14cdd4a-46f7-41b6-b996-5c20b2435c57"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ra\[IAcute]zes de polin\[OHat]mio por inspe\[CCedilla]\[ATilde]o", \
"Subchapter",ExpressionUUID->"fb374a62-8ddd-4baf-9085-dc48d0a1a21e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PolyRoots", "[", "poly_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"First", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", "}"}]}], "]"}], "&"}], "@", 
    RowBox[{"Last", "@", 
     RowBox[{"Reap", "@", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"deg", "=", 
          RowBox[{"Exponent", "[", 
           RowBox[{"poly", ",", "X"}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"PolyRoots", "[", "]"}], "[", "\"\<count\>\"", "]"}], "=", 
          "0"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"poly", "/.", 
              RowBox[{"X", "\[Rule]", "0"}]}], ")"}], "~", "GFEqualsQ", "~", 
            "0"}], ",", 
           RowBox[{
            RowBox[{"Sow", "[", "0", "]"}], ";", 
            RowBox[{
             RowBox[{
              RowBox[{"PolyRoots", "[", "]"}], "[", "\"\<count\>\"", "]"}], 
             "=", "1"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"NestWhile", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"poly", "/.", 
                    RowBox[{"X", "\[Rule]", "#"}]}], ")"}], "~", "GFEqualsQ", 
                  "~", "0"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Sow", "[", "#", "]"}], ";", "\[IndentingNewLine]", 
                  
                  RowBox[{
                   RowBox[{
                    RowBox[{"PolyRoots", "[", "]"}], "[", "\"\<count\>\"", 
                    "]"}], "=", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"PolyRoots", "[", "]"}], "[", "\"\<count\>\"", 
                    "]"}], "+", "1"}]}], ";"}]}], "\[IndentingNewLine]", 
                "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"#", " ", "\[Alpha]"}]}]}], "\[IndentingNewLine]", 
             "]"}], "&"}], ",", "\[IndentingNewLine]", "1", ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"PolyRoots", "[", "]"}], "[", "\"\<count\>\"", "]"}], 
              "<", "deg"}], "\[And]", 
             RowBox[{
              RowBox[{"Exponent", "[", 
               RowBox[{"#", ",", "\[Alpha]"}], "]"}], "<", "n"}]}], "&"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}]}]}]}]}], ";"}]], "Input",
 CellLabel->"In[15]:=",ExpressionUUID->"cbf8084f-48fd-43ee-9b28-e64fdc5fbc0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compara\[CCedilla]\[ATilde]o robusta", "Subchapter",ExpressionUUID->"d24d9937-11ff-465d-ab6d-e4d5c68e86cc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GFEqualsQ", "[", 
   RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"ExpandAsSum", "[", 
    RowBox[{"a", "-", "b"}], "]"}], "===", "0"}]}]], "Input",
 CellLabel->"In[16]:=",ExpressionUUID->"aed7d71f-9843-4d22-9e15-03b854e072ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Invers\[ATilde]o \[EAcute] um problema", "Subchapter",ExpressionUUID->"c1667fb5-521e-4250-9754-5ca184d4bd6b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Invert", "[", "\[Beta]_", "]"}], ":=", 
  SuperscriptBox["\[Alpha]", 
   RowBox[{"n", "-", 
    RowBox[{"Exponent", "[", 
     RowBox[{
      RowBox[{"ExpandAsPower", "@", "\[Beta]"}], ",", "\[Alpha]"}], 
     "]"}]}]]}]], "Input",
 CellLabel->"In[17]:=",ExpressionUUID->"358d75c2-6ea8-4747-bd47-2e86b61fdbac"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Invert", "[", "1", "]"}], "=", "1"}], ";"}]], "Input",
 CellLabel->"In[18]:=",ExpressionUUID->"e9868cc0-010b-46fa-9bea-8fcab84bdc5b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["BCH", "Chapter",ExpressionUUID->"fb4e39ff-4acc-4eec-ab70-451d45695f3d"],

Cell[CellGroupData[{

Cell["Gerador do c\[OAcute]digo", "Subchapter",ExpressionUUID->"e64dad3f-ab00-4d94-84ea-0a730d4f0b7b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Generator", "::", "usage"}], "=", 
   "\"\<Generator[t] assumes GF[m,poly] has been called beforehand\>\""}], 
  ";"}]], "Input",
 CellLabel->"In[19]:=",ExpressionUUID->"f753dc44-4086-4253-80b2-5514eec5c3e7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Generator", "[", "t_", "]"}], ":=", 
  RowBox[{"PolynomialLCM", "[", 
   RowBox[{"Sequence", "@@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"MinPoly", "[", 
       SuperscriptBox["\[Alpha]", "i"], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{
         RowBox[{"2", "t"}], "-", "1"}], ",", "2"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[20]:=",ExpressionUUID->"c8828783-be32-4bbe-888c-2fe3d8567145"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Generator", "[", 
   RowBox[{"t_", "/;", 
    RowBox[{"t", "\[GreaterEqual]", " ", 
     SuperscriptBox["2", 
      RowBox[{"m", "-", "1"}]]}]}], "]"}], ":=", 
  RowBox[{
  "Throw", "[", "\"\<Inconsistent Generator call\>\"", "]"}]}]], "Input",
 CellLabel->"In[21]:=",ExpressionUUID->"5a09cc54-bdc5-4ab0-94e2-11a8e3c05da9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["S\[IAcute]ndrome", "Subchapter",ExpressionUUID->"060d4e3f-c392-4514-b696-2a78fc5349fc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sindrome", "[", 
   RowBox[{"codepoly_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ExpandAsPower", "[", 
     RowBox[{"codepoly", "/.", 
      RowBox[{"X", "\[Rule]", 
       SuperscriptBox["\[Alpha]", "i"]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"2", "t"}]}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[22]:=",ExpressionUUID->"9841ac3d-9079-4db8-9e9c-870fcae5fc7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Decodifica\[CCedilla]\[ATilde]o", "Subchapter",ExpressionUUID->"83652b27-759f-4b0b-9ada-59c5d5faad42"],

Cell[CellGroupData[{

Cell["Vers\[ATilde]o falha", "Subsection",
 Background->GrayLevel[
  0.85],ExpressionUUID->"baa69a5f-9caa-4dca-bd9d-2fbecb7b0741"],

Cell[BoxData[
 RowBox[{
  RowBox[{"discrepancy", "[", 
   RowBox[{"\[Sigma]_", ",", "S_", ",", "\[Mu]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"S", "\[LeftDoubleBracket]", 
      RowBox[{"\[Mu]", "+", "2"}], "\[RightDoubleBracket]"}], "-", "1"}], 
    ")"}], "+", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Sigma]", "/.", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["X", "i_"], "\[RuleDelayed]", 
        RowBox[{"S", "\[LeftDoubleBracket]", 
         RowBox[{"\[Mu]", "+", "2", "-", "i"}], "\[RightDoubleBracket]"}]}], 
       "}"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{"X", "\[Rule]", 
       RowBox[{"S", "\[LeftDoubleBracket]", 
        RowBox[{"\[Mu]", "+", "1"}], "\[RightDoubleBracket]"}]}], "}"}]}], 
    ")"}]}]}]], "Input",
 Background->GrayLevel[0.85],
 CellLabel->"In[23]:=",ExpressionUUID->"e858c434-9b32-4a5d-ad2c-abf40309c307"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"row", "[", 
    RowBox[{"\[Mu]_", ",", "\[Sigma]_", ",", "d\[Mu]_", ",", "l\[Mu]_"}], 
    "]"}], "//", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", "\"\<\[Mu]\>\"", "]"}], ":=", "\[Mu]"}], ",", 
      RowBox[{
       RowBox[{"#", "[", "\"\<\[Sigma]\>\"", "]"}], ":=", "\[Sigma]"}], ",", 
      RowBox[{
       RowBox[{"#", "[", "\"\<d\[Mu]\>\"", "]"}], ":=", "d\[Mu]"}], ",", 
      RowBox[{
       RowBox[{"#", "[", "\"\<l\[Mu]\>\"", "]"}], ":=", "l\[Mu]"}], ",", 
      RowBox[{
       RowBox[{"#", "[", "\"\<\[Mu]-l\[Mu]\>\"", "]"}], ":=", 
       RowBox[{"\[Mu]", "-", "l\[Mu]"}]}]}], "}"}], "&"}]}], ";"}]], "Input",
 Background->GrayLevel[0.85],
 CellLabel->"In[24]:=",ExpressionUUID->"56da5c4c-7cb8-4340-a999-8220818c94a4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"disassemble", "=", 
   RowBox[{
    RowBox[{"#", "/@", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Mu]\>\"", ",", "\"\<\[Sigma]\>\"", ",", "\"\<d\[Mu]\>\"", ",", 
       "\"\<l\[Mu]\>\""}], "}"}]}], "&"}]}], ";"}]], "Input",
 Background->GrayLevel[0.85],
 CellLabel->"In[25]:=",ExpressionUUID->"fb744143-6dbf-4d89-bd73-b278207fbb0a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"best", "=", 
   RowBox[{"Last", "@*", 
    RowBox[{"MaximalBy", "[", 
     RowBox[{
      RowBox[{"#", "[", "\"\<\[Mu]-l\[Mu]\>\"", "]"}], "&"}], "]"}], "@*", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"Not", "[", 
       RowBox[{
        RowBox[{"#", "[", "\"\<d\[Mu]\>\"", "]"}], "===", "0"}], "]"}], "&"}],
      "]"}]}]}], ";"}]], "Input",
 Background->GrayLevel[0.85],
 CellLabel->"In[26]:=",ExpressionUUID->"bc602787-753a-47df-842a-89a1afb157ff"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Decode", "[", 
   RowBox[{"codepoly_", ",", "gen_", ",", "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Block", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"sindrome", "=", 
                 RowBox[{"Sindrome", "[", 
                  RowBox[{"codepoly", ",", "t"}], "]"}]}], "}"}], ",", 
               RowBox[{"NestWhile", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "~", "Append", "~", 
                   RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "\[Mu]", ",", "\[Sigma]\[Mu]", ",", "d\[Mu]", ",", 
                    "l\[Mu]", ",", "\[Rho]", ",", "\[Sigma]\[Rho]", ",", 
                    "d\[Rho]", ",", "l\[Rho]", ",", "\[Sigma]\[Mu]1", ",", 
                    "l\[Mu]1"}], "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "\[Mu]", ",", "\[Sigma]\[Mu]", ",", "d\[Mu]", ",", 
                    "l\[Mu]"}], "}"}], "=", 
                    RowBox[{"disassemble", "@", 
                    RowBox[{"Last", "@", "#"}]}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"Not", "[", 
                    RowBox[{"d\[Mu]", "===", "0"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "\[Rho]", ",", "\[Sigma]\[Rho]", ",", "d\[Rho]", ",", 
                    "l\[Rho]"}], "}"}], "=", 
                    RowBox[{"disassemble", "@", 
                    RowBox[{"best", "@", 
                    RowBox[{"Most", "@", "#"}]}]}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\[Sigma]\[Mu]1", "=", 
                    RowBox[{"\[Sigma]\[Mu]", "+", 
                    RowBox[{"d\[Mu]", " ", 
                    RowBox[{"Invert", "[", "d\[Rho]", "]"}], 
                    SuperscriptBox["X", 
                    RowBox[{"\[Mu]", "-", "\[Rho]"}]], "\[Sigma]\[Rho]"}]}]}],
                     ";", "\[IndentingNewLine]", 
                    RowBox[{"l\[Mu]1", "=", 
                    RowBox[{"Exponent", "[", 
                    RowBox[{"\[Sigma]\[Mu]1", ",", "X"}], "]"}]}]}], ",", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"\[Sigma]\[Mu]1", "=", "\[Sigma]\[Mu]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"l\[Mu]1", "=", "l\[Mu]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    
                    RowBox[{"Echo", "@", 
                    RowBox[{"row", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"\[Mu]", "+", "1"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"ExpandAsPower", "@", "\[Sigma]\[Mu]1"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"ExpandAsPower", "@", 
                    RowBox[{"discrepancy", "[", 
                    RowBox[{"\[Sigma]\[Mu]1", ",", "sindrome", ",", "\[Mu]"}],
                     "]"}]}], ",", "\[IndentingNewLine]", "l\[Mu]1"}], 
                    "\[IndentingNewLine]", "]"}]}]}]}], "\[IndentingNewLine]",
                     "]"}]}], " ", "&"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"row", "[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "0"}], "]"}],
                    ",", 
                   RowBox[{"row", "[", 
                    RowBox[{"0", ",", "1", ",", 
                    RowBox[{
                    "sindrome", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", "0"}], "]"}]}], "}"}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "@", "#"}], "<", 
                   RowBox[{
                    RowBox[{"2", "t"}], "+", "1"}]}], "&"}]}], 
                "\[IndentingNewLine]", "]"}]}], " ", "]"}], "//", "Last"}], "//", 
            RowBox[{
             RowBox[{"#", "[", "\"\<\[Sigma]\>\"", "]"}], "&"}]}], "//", 
           "ExpandAsPower"}], 
          RowBox[{"(*", 
           RowBox[{
           "at\[EAcute]", " ", "expandir", " ", "em", " ", 
            "pot\[EHat]ncias"}], "*)"}], "//", "Echo"}], "//", "PolyRoots"}], 
        "//", 
        RowBox[{"Map", "[", "Invert", "]"}]}], "//", 
       RowBox[{"ReplaceAll", "[", 
        RowBox[{"\[Alpha]", "\[Rule]", "X"}], "]"}]}], "//", 
      RowBox[{"Apply", "[", "Plus", "]"}]}], "//", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"codepoly", "+", "#"}], ")"}], "&"}]}], "//", 
    RowBox[{
     RowBox[{"PolynomialQuotient", "[", 
      RowBox[{"#", ",", "gen", ",", "X"}], "]"}], "&"}]}], "//", 
   "ExpandAsPower"}]}]], "Input",
 Background->GrayLevel[0.85],
 CellLabel->"In[27]:=",ExpressionUUID->"9e90abe9-6e7a-4828-8d4c-81c21a5e1bc5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Vers\[ATilde]o funcional", "Subsection",ExpressionUUID->"2f70bfcd-bfb2-4efb-b121-8368a796f2bd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Decode2", "[", 
   RowBox[{"codepoly_", ",", "gen_", ",", "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"sindromePoly", "=", 
              RowBox[{
               RowBox[{"Apply", "[", "Plus", "]"}], "@", 
               RowBox[{
                RowBox[{"MapIndexed", "[", 
                 RowBox[{
                  RowBox[{"#1", " ", 
                   SuperscriptBox["X", 
                    RowBox[{
                    "#2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]]}], "&"}], "]"}], "@", 
                RowBox[{"Sindrome", "[", 
                 RowBox[{"codepoly", ",", "t"}], "]"}]}]}]}], ",", 
             "\[IndentingNewLine]", "\[Sigma]", ",", "\[Tau]", ",", 
             "\[Omega]", ",", "\[Gamma]", ",", "D", ",", "B", ",", "k", ",", 
             "\[CapitalDelta]"}], "\[IndentingNewLine]", "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Sigma]", "[", "0", "]"}], "=", "1"}], ";", 
            RowBox[{
             RowBox[{"\[Tau]", "[", "0", "]"}], "=", "1"}], ";", 
            RowBox[{
             RowBox[{"\[Omega]", "[", "0", "]"}], "=", "1"}], ";", 
            RowBox[{
             RowBox[{"\[Gamma]", "[", "0", "]"}], "=", "0"}], ";", 
            RowBox[{
             RowBox[{"D", "[", "0", "]"}], "=", "0"}], ";", 
            RowBox[{
             RowBox[{"B", "[", "0", "]"}], "=", "0"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"k", "=", "0"}], ";", "\[IndentingNewLine]", 
            RowBox[{"While", "[", 
             RowBox[{
              RowBox[{"k", "<", 
               RowBox[{"2", "t"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"\[CapitalDelta]", "[", "k", "]"}], "=", 
                RowBox[{"ExpandAsPower", "@", 
                 RowBox[{"Coefficient", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "+", "sindromePoly"}], ")"}], 
                    RowBox[{"\[Sigma]", "[", "k", "]"}]}], ",", 
                   SuperscriptBox["X", 
                    RowBox[{"k", "+", "1"}]]}], "]"}]}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"\[Sigma]", "[", 
                 RowBox[{"k", "+", "1"}], "]"}], "=", 
                RowBox[{
                 RowBox[{"\[Sigma]", "[", "k", "]"}], "-", 
                 RowBox[{
                  RowBox[{"\[CapitalDelta]", "[", "k", "]"}], " ", "X", " ", 
                  RowBox[{"\[Tau]", "[", "k", "]"}]}]}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"\[Omega]", "[", 
                 RowBox[{"k", "+", "1"}], "]"}], "=", 
                RowBox[{
                 RowBox[{"\[Omega]", "[", "k", "]"}], "-", 
                 RowBox[{
                  RowBox[{"\[CapitalDelta]", "[", "k", "]"}], " ", "X", " ", 
                  RowBox[{"\[Gamma]", "[", "k", "]"}]}]}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[CapitalDelta]", "[", "k", "]"}], "===", "0"}], 
                  "\[Or]", 
                  RowBox[{
                   RowBox[{"D", "[", "k", "]"}], ">", 
                   FractionBox[
                    RowBox[{"k", "+", "1"}], "2"]}], "\[Or]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"\[CapitalDelta]", "[", "k", "]"}], "=!=", "0"}], 
                    "\[And]", 
                    RowBox[{
                    RowBox[{"D", "[", "k", "]"}], "===", 
                    FractionBox[
                    RowBox[{"k", "+", "1"}], "2"]}], "\[And]", 
                    RowBox[{
                    RowBox[{"B", "[", "k", "]"}], "===", "0"}]}], ")"}]}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"D", "[", 
                    RowBox[{"k", "+", "1"}], "]"}], "=", 
                   RowBox[{"D", "[", "k", "]"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"B", "[", 
                    RowBox[{"k", "+", "1"}], "]"}], "=", 
                   RowBox[{"B", "[", "k", "]"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"\[Tau]", "[", 
                    RowBox[{"k", "+", "1"}], "]"}], "=", 
                   RowBox[{"X", " ", 
                    RowBox[{"\[Tau]", "[", "k", "]"}]}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"\[Gamma]", "[", 
                    RowBox[{"k", "+", "1"}], "]"}], "=", 
                   RowBox[{"X", " ", 
                    RowBox[{"\[Gamma]", "[", "k", "]"}]}]}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"D", "[", 
                    RowBox[{"k", "+", "1"}], "]"}], "=", 
                   RowBox[{"k", "+", "1", "-", 
                    RowBox[{"D", "[", "k", "]"}]}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"B", "[", 
                    RowBox[{"k", "+", "1"}], "]"}], "=", 
                   RowBox[{"1", "-", 
                    RowBox[{"B", "[", "k", "]"}]}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"\[Tau]", "[", 
                    RowBox[{"k", "+", "1"}], "]"}], "=", 
                   RowBox[{
                    RowBox[{"Invert", "[", 
                    RowBox[{"\[CapitalDelta]", "[", "k", "]"}], "]"}], 
                    RowBox[{"\[Sigma]", "[", "k", "]"}]}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"\[Gamma]", "[", 
                    RowBox[{"k", "+", "1"}], "]"}], "=", 
                   RowBox[{
                    RowBox[{"Invert", "[", 
                    RowBox[{"\[CapitalDelta]", "[", "k", "]"}], "]"}], 
                    RowBox[{"\[Omega]", "[", "k", "]"}]}]}], ";"}]}], 
                "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"k", "=", 
                RowBox[{"k", "+", "1"}]}], ";"}]}], "\[IndentingNewLine]", 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"\[Sigma]", "[", 
             RowBox[{"2", "t"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], "//",
          "PolyRoots"}], "//", 
        RowBox[{"Map", "[", "Invert", "]"}]}], "//", 
       RowBox[{"ReplaceAll", "[", 
        RowBox[{"\[Alpha]", "\[Rule]", "X"}], "]"}]}], "//", 
      RowBox[{"Apply", "[", "Plus", "]"}]}], "//", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"codepoly", "+", "#"}], ")"}], "&"}]}], "//", 
    RowBox[{
     RowBox[{"PolynomialQuotient", "[", 
      RowBox[{"#", ",", "gen", ",", "X"}], "]"}], "&"}]}], "//", 
   "ExpandAsPower"}]}]], "Input",
 CellLabel->"In[28]:=",ExpressionUUID->"42677bb7-5465-4fc6-b0f5-a783bdd94844"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Implementa\[CCedilla]\[ATilde]o", "Title",ExpressionUUID->"b5bfd150-192c-4704-8366-905287eaa879"],

Cell[CellGroupData[{

Cell["Testes", "Subchapter",ExpressionUUID->"cf59c770-8eb4-49f2-9d8a-bc51aaabef1b"],

Cell[BoxData[
 RowBox[{"GF", "[", 
  RowBox[{"5", ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["X", "2"], "+", 
    SuperscriptBox["X", "5"]}]}], "]"}]], "Input",
 CellLabel->"In[74]:=",ExpressionUUID->"cf257589-7f75-429f-860a-15087a541000"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"Generator", "[", "3", "]"}]}]], "Input",
 CellLabel->"In[75]:=",ExpressionUUID->"763dc033-5fab-465a-aee3-fcc3fc8f61a0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", "+", 
    SuperscriptBox["X", "2"], "+", 
    SuperscriptBox["X", "5"]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "X", "+", 
    SuperscriptBox["X", "2"], "+", 
    SuperscriptBox["X", "4"], "+", 
    SuperscriptBox["X", "5"]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    SuperscriptBox["X", "2"], "+", 
    SuperscriptBox["X", "3"], "+", 
    SuperscriptBox["X", "4"], "+", 
    SuperscriptBox["X", "5"]}], ")"}]}]], "Output",
 CellLabel->"Out[75]=",ExpressionUUID->"1d5fe9f8-f014-4fd6-8625-b6a4dbfe11b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Decode", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"g", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["X", "2"], "+", 
       SuperscriptBox["X", "3"]}], ")"}]}], "+", 
    SuperscriptBox["X", "12"], "+", 
    SuperscriptBox["X", "13"], "+", 
    SuperscriptBox["X", "4"]}], ",", "g", ",", "3"}], "]"}]], "Input",
 CellLabel->"In[76]:=",ExpressionUUID->"242af9ef-a6df-4a65-a225-d7dac404b4a8"],

Cell[BoxData[
 RowBox[{"1", "+", 
  SuperscriptBox["X", "2"], "+", 
  SuperscriptBox["X", "3"]}]], "Output",
 CellLabel->"Out[76]=",ExpressionUUID->"94348d3d-dd2e-45cc-83a8-c9841392d79d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"Generator", "[", "3", "]"}]}], ";"}]], "Input",
 CellLabel->"In[27]:=",ExpressionUUID->"8b50e74e-fbd9-4dc5-aee0-0a73ddd5c685"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Berlekamp-Massey \[EAcute] linear no tamanho do c\[OAcute]digo", \
"Subchapter",ExpressionUUID->"c3a2f358-af63-4f7f-9e61-1befc84906e6"],

Cell[TextData[{
 "Polin\[OHat]mios primitivos retirados <",
 ButtonBox["daqui>",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.partow.net/programming/polynomials/index.html"], None},
  ButtonNote->"http://www.partow.net/programming/polynomials/index.html"]
}], "Text",ExpressionUUID->"108f1a67-f95f-4573-8b89-6d44475efc6d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"polys", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["X", "4"], "+", 
      SuperscriptBox["X", "3"], "+", "1"}], ",", 
     RowBox[{
      SuperscriptBox["X", "5"], "+", 
      SuperscriptBox["X", "2"], "+", "1"}], ",", 
     RowBox[{
      SuperscriptBox["X", "6"], "+", "X", "+", "1"}], ",", 
     RowBox[{
      SuperscriptBox["X", "7"], "+", "X", "+", "1"}], ",", 
     RowBox[{
      SuperscriptBox["X", "8"], "+", 
      SuperscriptBox["X", "5"], "+", 
      SuperscriptBox["X", "3"], "+", "X", "+", "1"}], ",", 
     RowBox[{
      SuperscriptBox["X", "9"], "+", 
      SuperscriptBox["X", "4"], "+", "1"}], ",", 
     RowBox[{
      SuperscriptBox["X", "10"], "+", 
      SuperscriptBox["X", "7"], "+", "1"}], ",", 
     RowBox[{
      SuperscriptBox["X", "11"], "+", 
      SuperscriptBox["X", "9"], "+", "1"}], ",", 
     RowBox[{
      SuperscriptBox["X", "12"], "+", 
      SuperscriptBox["X", "6"], "+", 
      SuperscriptBox["X", "4"], "+", "X", "+", "1"}], ",", 
     RowBox[{
      SuperscriptBox["X", "13"], "+", 
      SuperscriptBox["X", "4"], "+", 
      SuperscriptBox["X", "3"], "+", "X", "+", "1"}], ",", 
     RowBox[{
      SuperscriptBox["X", "14"], "+", 
      SuperscriptBox["X", "8"], "+", 
      SuperscriptBox["X", "6"], "+", "X", "+", "1"}], ",", 
     RowBox[{
      SuperscriptBox["X", "15"], "+", "X", "+", "1"}]}], "}"}]}], 
  ";"}]], "Input",
 CellLabel->
  "In[110]:=",ExpressionUUID->"970cbe56-22d8-4ed6-8ec3-804ddac356cd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"times", "=", 
    RowBox[{
     RowBox[{"Take", "[", 
      RowBox[{"polys", ",", "8"}], "]"}], "//", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"curr", "=", "#"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"GF", "[", 
           RowBox[{
            RowBox[{"Exponent", "[", 
             RowBox[{"#", ",", "X"}], "]"}], ",", "#"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"g", "=", 
           RowBox[{"Generator", "[", "5", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"AbsoluteTiming", "[", 
           RowBox[{"Decode2", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"g", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 SuperscriptBox["X", "2"], "+", 
                 SuperscriptBox["X", "4"]}], ")"}]}], "+", 
              SuperscriptBox["X", "12"], "+", 
              SuperscriptBox["X", "13"], "+", 
              SuperscriptBox["X", "4"]}], ",", "g", ",", "5"}], "]"}], 
           "]"}]}]}], "\[IndentingNewLine]", "]"}], "&"}], " ", "]"}]}]}], 
   ",", "\[IndentingNewLine]", "curr"}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellLabel->
  "In[117]:=",ExpressionUUID->"cb16a664-38cb-4d8b-9dcc-50144fbac68f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.014876`", ",", 
     RowBox[{"1", "+", 
      SuperscriptBox["X", "2"], "+", 
      SuperscriptBox["X", "4"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.014918`", ",", 
     RowBox[{"1", "+", 
      SuperscriptBox["X", "2"], "+", 
      SuperscriptBox["X", "4"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.020591`", ",", 
     RowBox[{"1", "+", 
      SuperscriptBox["X", "2"], "+", 
      SuperscriptBox["X", "4"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.02685`", ",", 
     RowBox[{"1", "+", 
      SuperscriptBox["X", "2"], "+", 
      SuperscriptBox["X", "4"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.061315`", ",", 
     RowBox[{"1", "+", 
      SuperscriptBox["X", "2"], "+", 
      SuperscriptBox["X", "4"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.08903`", ",", 
     RowBox[{"1", "+", 
      SuperscriptBox["X", "2"], "+", 
      SuperscriptBox["X", "4"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.164651`", ",", 
     RowBox[{"1", "+", 
      SuperscriptBox["X", "2"], "+", 
      SuperscriptBox["X", "4"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.310148`", ",", 
     RowBox[{"1", "+", 
      SuperscriptBox["X", "2"], "+", 
      SuperscriptBox["X", "4"]}]}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[117]=",ExpressionUUID->"658c22b9-8920-4cda-ae8a-95fe491e9672"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"4", ",", 
         RowBox[{
          RowBox[{"Length", "@", "times"}], "+", "3"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{"Log", "@*", "First"}], "]"}], "@", "times"}]}], "}"}]}], 
    ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"#", ",", "16"}], "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*Cell[\"tamanho de \
bloco\",ExpressionUUID->\"b2a24b25-6ae0-4879-a5c4-686f9a92dcbf\"]\)\>\"", 
         ",", "\"\<tempo de decodifica\[CCedilla]\[ATilde]o\>\""}], "}"}]}], 
      ")"}]}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", "Automatic"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellLabel->
  "In[125]:=",ExpressionUUID->"61ef32aa-3be7-46f0-a31c-b7ab123c5880"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{4., -3.2565776920522125`}, {5., -3.0468361122052023`}, {
      6., -2.2080843315895198`}, {7., -1.691836309232486}, {
      8., -0.33800040367392387`}, {9., 1.141570240406727}, {10., 
      1.3846730475009905`}, {11., 
      1.6718367711257252`}}]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.890625, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      StyleBox[
      "\"tempo de decodifica\[CCedilla]\[ATilde]o\"", 16, StripOnInput -> 
       False], TraditionalForm], None}, {
     FormBox[
      StyleBox[
      "\"\\!\\(\\*Cell[\\\"tamanho de bloco\\\"]\\)\"", 16, StripOnInput -> 
       False], TraditionalForm], None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImagePadding->All,
  ImageSize->{475., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{4., 11.}, {-3.2565776920522125`, 1.6718367711257252`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[125]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztnemzFEUSwIc3b+a95+IqupeuH1j308Yauq6LirGhoR92P+2/sBGGsQoq
goAoeADet+LFoeKJiDcioAIqnigg4oXKU/F8COJDURRFa+uXXdmvZqaH7p53
0A+6I6Znpro7KyszKzMrK6v6P8ePHfa/EcePHX7C8YP/Pfr4UcOGnzBm8L9G
jrZFxQGFwoC19jNkcIHfplDQkxztnNyfFL+fkq+yeeSRR8yIESPMaaedZrZt
22Y+++wzc/XVVzdRUGg1N9xwg1m3bp2ZOnWqmTx5skD46quvzIknnmheeOGF
okApmvHjx5vbbrtN/jXJeW8zY8YMM2nSJKPHq6++KiBOPvlkM3bsWHPXXXeZ
zZs3m9NPP93Mnj1b7lm2bJmA/vLLL4sOwRtvvNFcdNFF9Wp+6qmnpOi7775z
NZfN22+/ba644gpzyimnSLuuu+46GtEql1vMxo0bzU033SSXRo8ebR5++GFz
yy230OyC1vr888+b888/X5AFQejw8ccftzgQtHfWrFnm5ptvFuqNHDlS2v/t
t986LIrmueeeE8y+/vrrOMy01h9//NE88MADZty4cXIL5HrppZeKO356esDR
JfI1yPz0009m2LBh5sorrzTPPvusEG7ChAnmzDPPNK+99pqwc/HixWbMmDHm
1FNPNffcc081cQtJ+frFF1+Y4cOHm6uuusq89957pr293cyZM0dIBqwVK1Y0
xNeBPl/lltdff92cdNJJUtPKlSvN8uXL5XEY9P7775flsVazZcsWEa6zzz5b
KgUB+EhDRayD2+bPny/QkEEgcxvQoOrnn38eQCtJ87ntvvvuM9988w2ks2Sw
8Aq/Fl5xeGxOgqhSEd4hOY8//rh58803zYMPPihglGMxYKb5PG8R5Pyn9f9D
Dz3keNli3njjDSlDwJLzu1zBb7DgGYuxggUcRYCvYnUhEa9banhNbRMnTjQ/
//xz2Jt++OEHYayV6kLZlUEz6EFVTQ4WbHDMFljApL/cfffdYSspmzJlirRc
YdFyBKWr5b9CEoQHStVqVtfi2eLjKffQKxxnQnLceuut0ht/+eUXH0ZUUyv4
PEhqBhqYcACBp4GGFH3//fdSvn37drkPCjXat1GTUA4JRGcAkwMt5GSgob5d
ruC3Sqrtkc0OMRQrCsw2zvbBoOzCCy9UkgYNaBJ1LY8IJsB4+umnS9JHi2b9
+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
/6C8oHQ=\
\>"],ExpressionUUID->"fdcf1470-a369-4ec0-b113-fe6f090a883f"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{4., -4.544922105642734}, {5., -4.193524218804846}, {
      6., -3.506391244540661}, {7., -2.5971172403959084`}, {
      8., -2.352321704903875}, {9., -1.628574861343309}, {
      10., -0.7825621711885321}, {11., -0.32927241763337467`}, {12., 
      0.37762514781107825`}, {13., 1.0292261255664348`}, {14., 
      1.6956403790105674`}, {15., 
      2.4275234459787973`}}]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.8281250000000004`, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      StyleBox[
      "\"tempo de decodifica\[CCedilla]\[ATilde]o\"", 16, StripOnInput -> 
       False], TraditionalForm], None}, {
     FormBox[
      StyleBox[
      "\"\\!\\(\\*Cell[\\\"tamanho de bloco\\\"]\\)\"", 16, StripOnInput -> 
       False], TraditionalForm], None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImagePadding->All,
  ImageSize->{481., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{4., 15.}, {-4.544922105642734, 2.4275234459787973`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Input",ExpressionUUID->"c285c4c3-2682-\
42b2-9345-34f34f645d26"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Exp", "[", 
  RowBox[{"-", "0.26"}], "]"}]], "Input",
 CellLabel->
  "In[121]:=",ExpressionUUID->"dd0dafff-a37b-4309-8f52-ff0d7806873f"],

Cell[BoxData["0.7710515858035663`"], "Output",
 CellLabel->
  "Out[121]=",ExpressionUUID->"7d8c1501-faec-4468-8ed3-ecfecfc471b2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["An\[AAcute]lise de desempenho (para tamanho de bloco pequeno)", \
"Subchapter",ExpressionUUID->"083ea47b-6b50-4000-88d7-bae43096d722"],

Cell[CellGroupData[{

Cell["Exemplo que falhava em Decode original", "Subsection",ExpressionUUID->"df7db2eb-3885-4cfd-8d9d-132a50640e04"],

Cell[BoxData[
 RowBox[{"GF", "[", 
  RowBox[{"5", ",", 
   RowBox[{
    SuperscriptBox["X", "5"], "+", 
    SuperscriptBox["X", "2"], "+", "1"}]}], "]"}]], "Input",
 CellLabel->"In[94]:=",ExpressionUUID->"21fe9d26-920e-419f-a8d0-42b232be6321"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"Generator", "[", "5", "]"}]}], ";"}]], "Input",
 CellLabel->"In[95]:=",ExpressionUUID->"00e2cf21-85d0-462e-bdd8-ceec7cdcb6ef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Decode2", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"g", 
     RowBox[{"(", 
      RowBox[{"X", "+", 
       SuperscriptBox["X", "2"]}], ")"}]}], "+", "X", "+", 
    SuperscriptBox["X", "3"], "+", 
    SuperscriptBox["X", "20"]}], ",", "g", ",", "5"}], "]"}]], "Input",
 CellLabel->
  "In[123]:=",ExpressionUUID->"3ae8acc6-d760-428c-9b6b-c9c4598cb77a"],

Cell[BoxData[
 RowBox[{"X", "+", 
  SuperscriptBox["X", "2"]}]], "Output",
 CellLabel->
  "Out[123]=",ExpressionUUID->"337f956e-9d9f-49cd-9162-585eb045c444"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Decode", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"g", 
     RowBox[{"(", 
      RowBox[{"X", "+", 
       SuperscriptBox["X", "2"]}], ")"}]}], "+", "X", "+", 
    SuperscriptBox["X", "3"], "+", 
    SuperscriptBox["X", "20"]}], ",", "g", ",", "5"}], "]"}]], "Input",
 CellLabel->"In[84]:=",ExpressionUUID->"662cbfbf-c20b-40d9-9490-9b35a0526688"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"row", "[", 
  RowBox[{"1", ",", 
   RowBox[{"1", "+", 
    RowBox[{"X", " ", 
     SuperscriptBox["\[Alpha]", "19"]}]}], ",", "0", ",", "1"}], 
  "]"}]], "Echo",ExpressionUUID->"481c13a0-39a6-4c5b-94de-bad6e5204f67"],

Cell[BoxData[
 RowBox[{"row", "[", 
  RowBox[{"2", ",", 
   RowBox[{"1", "+", 
    RowBox[{"X", " ", 
     SuperscriptBox["\[Alpha]", "19"]}]}], ",", 
   SuperscriptBox["\[Alpha]", "20"], ",", "1"}], "]"}]], "Echo",ExpressionUUID\
->"73ed90df-cf78-49b0-a9ba-722389367e1b"],

Cell[BoxData[
 RowBox[{"row", "[", 
  RowBox[{"3", ",", 
   RowBox[{"1", "+", 
    RowBox[{
     SuperscriptBox["X", "2"], " ", "\[Alpha]"}], "+", 
    RowBox[{"X", " ", 
     SuperscriptBox["\[Alpha]", "19"]}]}], ",", "0", ",", "2"}], 
  "]"}]], "Echo",ExpressionUUID->"3fe1fb2b-308d-4a52-8cc9-7f65dd3ff239"],

Cell[BoxData[
 RowBox[{"row", "[", 
  RowBox[{"4", ",", 
   RowBox[{"1", "+", 
    RowBox[{
     SuperscriptBox["X", "2"], " ", "\[Alpha]"}], "+", 
    RowBox[{"X", " ", 
     SuperscriptBox["\[Alpha]", "19"]}]}], ",", 
   SuperscriptBox["\[Alpha]", "25"], ",", "2"}], "]"}]], "Echo",ExpressionUUID\
->"fcb3dd10-378f-4f4d-9d15-fdc7ed474f12"],

Cell[BoxData[
 RowBox[{"row", "[", 
  RowBox[{"5", ",", 
   RowBox[{"1", "+", 
    RowBox[{
     SuperscriptBox["X", "2"], " ", 
     SuperscriptBox["\[Alpha]", "11"]}], "+", 
    RowBox[{"X", " ", 
     SuperscriptBox["\[Alpha]", "19"]}], "+", 
    RowBox[{
     SuperscriptBox["X", "3"], " ", 
     SuperscriptBox["\[Alpha]", "24"]}]}], ",", 
   SuperscriptBox["\[Alpha]", "13"], ",", "3"}], "]"}]], "Echo",ExpressionUUID\
->"6363322d-e141-447e-98c9-95d043d5b679"],

Cell[BoxData[
 RowBox[{"row", "[", 
  RowBox[{"6", ",", 
   RowBox[{"1", "+", 
    RowBox[{
     SuperscriptBox["X", "2"], " ", 
     SuperscriptBox["\[Alpha]", "17"]}], "+", 
    RowBox[{
     SuperscriptBox["X", "3"], " ", 
     SuperscriptBox["\[Alpha]", "30"]}]}], ",", 
   SuperscriptBox["\[Alpha]", "30"], ",", "3"}], "]"}]], "Echo",ExpressionUUID\
->"e2b6b58c-13f4-4d16-92b3-851bc13cbb54"],

Cell[BoxData[
 RowBox[{"row", "[", 
  RowBox[{"7", ",", 
   RowBox[{"1", "+", 
    RowBox[{
     SuperscriptBox["X", "3"], " ", 
     SuperscriptBox["\[Alpha]", "2"]}], "+", 
    RowBox[{
     SuperscriptBox["X", "4"], " ", 
     SuperscriptBox["\[Alpha]", "10"]}], "+", 
    RowBox[{"X", " ", 
     SuperscriptBox["\[Alpha]", "17"]}], "+", 
    RowBox[{
     SuperscriptBox["X", "2"], " ", 
     SuperscriptBox["\[Alpha]", "28"]}]}], ",", 
   SuperscriptBox["\[Alpha]", "19"], ",", "4"}], "]"}]], "Echo",ExpressionUUID\
->"84600c84-d7b9-45c5-a059-31a81053eb94"],

Cell[BoxData[
 RowBox[{"row", "[", 
  RowBox[{"8", ",", 
   RowBox[{"1", "+", 
    RowBox[{
     SuperscriptBox["X", "3"], " ", 
     SuperscriptBox["\[Alpha]", "12"]}], "+", 
    RowBox[{"X", " ", 
     SuperscriptBox["\[Alpha]", "15"]}], "+", 
    RowBox[{
     SuperscriptBox["X", "4"], " ", 
     SuperscriptBox["\[Alpha]", "26"]}], "+", 
    RowBox[{
     SuperscriptBox["X", "2"], " ", 
     SuperscriptBox["\[Alpha]", "28"]}]}], ",", 
   SuperscriptBox["\[Alpha]", "12"], ",", "4"}], "]"}]], "Echo",ExpressionUUID\
->"ebd66a8b-162b-4504-9b2b-b209e3909834"],

Cell[BoxData[
 RowBox[{"row", "[", 
  RowBox[{"9", ",", 
   RowBox[{"1", "+", "X", "+", 
    RowBox[{
     SuperscriptBox["X", "5"], " ", 
     SuperscriptBox["\[Alpha]", "3"]}], "+", 
    RowBox[{
     SuperscriptBox["X", "2"], " ", 
     SuperscriptBox["\[Alpha]", "11"]}], "+", 
    RowBox[{
     SuperscriptBox["X", "3"], " ", 
     SuperscriptBox["\[Alpha]", "28"]}]}], ",", 
   SuperscriptBox["\[Alpha]", "25"], ",", "5"}], "]"}]], "Echo",ExpressionUUID\
->"2f15eeae-5252-421b-93e3-ba0d4e8e0169"],

Cell[BoxData[
 RowBox[{"1", "+", "X", "+", 
  RowBox[{
   SuperscriptBox["X", "5"], " ", 
   SuperscriptBox["\[Alpha]", "3"]}], "+", 
  RowBox[{
   SuperscriptBox["X", "2"], " ", 
   SuperscriptBox["\[Alpha]", "11"]}], "+", 
  RowBox[{
   SuperscriptBox["X", "3"], " ", 
   SuperscriptBox["\[Alpha]", "28"]}]}]], "Echo",ExpressionUUID->"b46703ed-\
f807-4fa1-8d3a-9ebd0a06da8a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"1", "+", "X", "+", 
  SuperscriptBox["X", "2"]}]], "Output",
 CellLabel->"Out[84]=",ExpressionUUID->"b075372f-ed0d-4cfc-9eb9-9ef0d070c802"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Preciso migrar para C++", "Subsection",ExpressionUUID->"ead66d36-6e2e-46a3-aba4-599d469205cf"],

Cell[BoxData[
 RowBox[{"GF", "[", 
  RowBox[{"3", ",", 
   RowBox[{"1", "+", "X", "+", 
    SuperscriptBox["X", "3"]}]}], "]"}]], "Input",
 CellLabel->"In[42]:=",ExpressionUUID->"1242cb38-1619-4871-907a-eedf025ce736"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"Generator", "[", "2", "]"}]}]], "Input",
 CellLabel->"In[43]:=",ExpressionUUID->"6a8274d0-c1c9-4842-a3ff-17accf8150a1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", "+", "X", "+", 
    SuperscriptBox["X", "3"]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    SuperscriptBox["X", "2"], "+", 
    SuperscriptBox["X", "3"]}], ")"}]}]], "Output",
 CellLabel->"Out[43]=",ExpressionUUID->"1d7b4c0c-cd7c-46e5-ae2e-0c74a6248e2f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExpandAsSum", "@", 
  RowBox[{"Sindrome", "[", 
   RowBox[{
    RowBox[{"1", "+", "X"}], ",", "2"}], "]"}]}]], "Input",
 CellLabel->"In[46]:=",ExpressionUUID->"c10b0955-f34a-4dbe-aace-89a1ab825508"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "+", "\[Alpha]"}], ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["\[Alpha]", "2"]}], ",", "\[Alpha]", ",", 
   RowBox[{"1", "+", "\[Alpha]", "+", 
    SuperscriptBox["\[Alpha]", "2"]}]}], "}"}]], "Output",
 CellLabel->"Out[46]=",ExpressionUUID->"1f1efc9f-e60c-4ba0-be79-3e43d0dda609"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"polys", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["X", "5"], "+", 
      SuperscriptBox["X", "2"], "+", "1"}], ",", 
     RowBox[{
      SuperscriptBox["X", "6"], "+", "X", "+", "1"}], ",", 
     RowBox[{
      SuperscriptBox["X", "7"], "+", "X", "+", "1"}], ",", 
     RowBox[{
      SuperscriptBox["X", "8"], "+", 
      SuperscriptBox["X", "5"], "+", 
      SuperscriptBox["X", "3"], "+", "X", "+", "1"}], ",", 
     RowBox[{
      SuperscriptBox["X", "9"], "+", 
      SuperscriptBox["X", "4"], "+", "1"}], ",", 
     RowBox[{
      SuperscriptBox["X", "10"], "+", 
      SuperscriptBox["X", "7"], "+", "1"}], ",", 
     RowBox[{
      SuperscriptBox["X", "11"], "+", 
      SuperscriptBox["X", "9"], "+", "1"}], ",", 
     RowBox[{
      SuperscriptBox["X", "12"], "+", 
      SuperscriptBox["X", "6"], "+", 
      SuperscriptBox["X", "4"], "+", "X", "+", "1"}], ",", 
     RowBox[{
      SuperscriptBox["X", "13"], "+", 
      SuperscriptBox["X", "4"], "+", 
      SuperscriptBox["X", "3"], "+", "X", "+", "1"}], ",", 
     RowBox[{
      SuperscriptBox["X", "14"], "+", 
      SuperscriptBox["X", "8"], "+", 
      SuperscriptBox["X", "6"], "+", "X", "+", "1"}], ",", 
     RowBox[{
      SuperscriptBox["X", "15"], "+", "X", "+", "1"}]}], "}"}]}], 
  ";"}]], "Input",
 CellLabel->"In[29]:=",ExpressionUUID->"5573e7dd-1b7d-4538-b8e6-08ccdf6f4b96"],

Cell[BoxData[
 RowBox[{"GF", "[", 
  RowBox[{"5", ",", 
   RowBox[{"First", "@", "polys"}]}], "]"}]], "Input",
 CellLabel->"In[30]:=",ExpressionUUID->"afaaf5d0-9525-4789-90b4-06abf7694f90"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"t", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"Generator", "[", "t", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{"n", "-", 
    RowBox[{"Exponent", "[", 
     RowBox[{"g", ",", "X"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "/", "n"}], "//", "N"}]}], "Input",
 CellLabel->"In[42]:=",ExpressionUUID->"bfe68861-953b-4f3b-af61-48a1298b4fad"],

Cell[BoxData["0.5161290322580645`"], "Output",
 CellLabel->"Out[45]=",ExpressionUUID->"35880e05-fcfe-4cb2-bff2-c60ad317cc1d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"4", "/", "7"}], "//", "N"}]], "Input",
 CellLabel->"In[46]:=",ExpressionUUID->"8afde62f-79aa-4fc4-8e9f-1cc490de48c3"],

Cell[BoxData["0.5714285714285714`"], "Output",
 CellLabel->"Out[46]=",ExpressionUUID->"edfd60e7-ecbe-46d0-9e01-bb9dcceb936f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Parece que a dist\[AHat]ncia \[EAcute] isso mesmo: 4. Mas como pode ser t\
\[ATilde]o ruim o c\[OAcute]digo ?\
\>", "Subsubsection",ExpressionUUID->"d3d5479f-f8c9-4d3d-a364-d5112b0861e3"],

Cell["\<\
Distance : 4
Matrix:
[[1 0 1 1 0 1 0 0 0 0 0 0]
 [0 1 0 1 1 0 1 0 0 0 0 0]
 [0 0 1 0 1 1 0 1 0 0 0 0]
 [0 0 0 1 0 1 1 0 1 0 0 0]
 [0 0 0 0 1 0 1 1 0 1 0 0]
 [0 0 0 0 0 1 0 1 1 0 1 0]
 [0 0 0 0 0 0 1 0 1 1 0 1]]
Distance : 2
Matrix:
[[1 1 1 1 1 1 0 0 0 0 0 0]
 [0 1 1 1 1 1 1 0 0 0 0 0]
 [0 0 1 1 1 1 1 1 0 0 0 0]
 [0 0 0 1 1 1 1 1 1 0 0 0]
 [0 0 0 0 1 1 1 1 1 1 0 0]
 [0 0 0 0 0 1 1 1 1 1 1 0]
 [0 0 0 0 0 0 1 1 1 1 1 1]]
Chosen matrices: 
File: 2 distance: 4
\
\>", "Text",ExpressionUUID->"c7345178-481a-4f80-83d5-2bd732abdb49"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"Expand", "@", 
   RowBox[{"Fold", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"X", " ", "#1"}], "+", "#2"}], "&"}], ",", 
     RowBox[{"Reverse", "@", 
      RowBox[{"{", 
       RowBox[{
       "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
        "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellLabel->"In[37]:=",ExpressionUUID->"355791aa-6286-4f09-964e-db517bbc2504"],

Cell[BoxData[
 RowBox[{"1", "+", 
  SuperscriptBox["X", "2"], "+", 
  SuperscriptBox["X", "3"], "+", 
  SuperscriptBox["X", "5"]}]], "Output",
 CellLabel->"Out[37]=",ExpressionUUID->"246df200-3f8a-42a7-b006-004489e4c4db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolynomialRemainder", "[", 
  RowBox[{
   RowBox[{"1", "+", 
    SuperscriptBox["X", "12"]}], ",", "g", ",", "X"}], "]"}]], "Input",
 CellLabel->"In[38]:=",ExpressionUUID->"f8d72eda-d61e-4b9e-993d-551d525cf5e8"],

Cell[BoxData["2"], "Output",
 CellLabel->"Out[38]=",ExpressionUUID->"8e88f49b-66c3-42b7-b858-9fe2ac949a42"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Confirma\[CCedilla]\[ATilde]o de que a dist\[AHat]ncia m\[IAcute]nima \
\[EAcute] 4", "Subsubsection",ExpressionUUID->"202a6a1c-bfc6-410d-8189-\
580a5ef8a6b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", 
         RowBox[{"PolynomialMod", "[", 
          RowBox[{"#", ",", "2"}], "]"}]}], "&"}], "@", 
       RowBox[{"Expand", "[", 
        RowBox[{"g", " ", "#"}], "]"}]}], "&"}], "]"}], "@", 
    RowBox[{"Rest", "@", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{"Expand", "@", 
         RowBox[{"Fold", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"X", " ", "#1"}], "+", "#2"}], "&"}], ",", 
           RowBox[{"Reverse", "@", "#"}]}], "]"}]}], "&"}], "]"}], "@", 
      RowBox[{"Flatten", "[", 
       RowBox[{"#", ",", "6"}], "]"}]}]}]}], "&"}], "@", 
  RowBox[{"Outer", "[", 
   RowBox[{"List", ",", 
    RowBox[{
     RowBox[{"Apply", "[", "Sequence", "]"}], "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", "7"}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[61]:=",ExpressionUUID->"9e20b622-fb07-49ba-850e-504c43825d07"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4", ",", "4", ",", "6", ",", "4", ",", "4", ",", "6", ",", "4", ",", "4", 
   ",", "4", ",", "4", ",", "6", ",", "6", ",", "6", ",", "4", ",", "6", ",", 
   "4", ",", "8", ",", "4", ",", "6", ",", "4", ",", "4", ",", "6", ",", "4", 
   ",", "6", ",", "6", ",", "6", ",", "8", ",", "4", ",", "4", ",", "6", ",", 
   "8", ",", "4", ",", "6", ",", "8", ",", "8", ",", "4", ",", "6", ",", "6", 
   ",", "6", ",", "4", ",", "6", ",", "4", ",", "8", ",", "6", ",", "4", ",", 
   "4", ",", "4", ",", "6", ",", "8", ",", "6", ",", "6", ",", "6", ",", "8", 
   ",", "8", ",", "8", ",", "4", ",", "6", ",", "4", ",", "8", ",", "6", ",", 
   "4", ",", "8", ",", "8", ",", "4", ",", "8", ",", "6", ",", "8", ",", "8", 
   ",", "8", ",", "8", ",", "6", ",", "4", ",", "4", ",", "6", ",", "8", ",", 
   "6", ",", "6", ",", "6", ",", "8", ",", "4", ",", "8", ",", "6", ",", "8", 
   ",", "4", ",", "4", ",", "8", ",", "6", ",", "6", ",", "6", ",", "4", ",", 
   "6", ",", "4", ",", "4", ",", "4", ",", "6", ",", "6", ",", "8", ",", "8", 
   ",", "8", ",", "6", ",", "8", ",", "6", ",", "6", ",", "6", ",", "8", ",", 
   "8", ",", "12", ",", "8", ",", "6", ",", "8", ",", "8", ",", "4", ",", "6",
    ",", "6", ",", "6", ",", "4", ",", "6", ",", "8", ",", "8", ",", "6", ",",
    "8", ",", "4", ",", "8", ",", "8", ",", "6", ",", "8", ",", "8"}], 
  "}"}]], "Output",
 CellLabel->"Out[61]=",ExpressionUUID->"3502f1ba-ee70-4197-8935-739e58800511"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Validando o sind_map de python", "Subsubsection",ExpressionUUID->"434487a4-cba4-48d3-b456-b9c348718e5c"],

Cell[BoxData[
 RowBox[{"GF", "[", 
  RowBox[{"3", ",", 
   RowBox[{"1", "+", "X", "+", 
    SuperscriptBox["X", "3"]}]}], "]"}]], "Input",
 CellLabel->"In[69]:=",ExpressionUUID->"cce70f85-0faa-442e-9e23-247a7a9d5943"],

Cell[CellGroupData[{

Cell[BoxData["g"], "Input",
 CellLabel->"In[66]:=",ExpressionUUID->"81e43b57-c427-44e6-bf84-231031abb7d1"],

Cell[BoxData[
 RowBox[{"1", "+", 
  SuperscriptBox["X", "2"], "+", 
  SuperscriptBox["X", "3"], "+", 
  SuperscriptBox["X", "5"]}]], "Output",
 CellLabel->"Out[66]=",ExpressionUUID->"ba75429c-5288-47d5-8450-892f08d126e0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"binarios", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"#", ",", 
      RowBox[{"n", "-", "1"}]}], "]"}], "&"}], "@", 
   RowBox[{"Outer", "[", 
    RowBox[{"List", ",", 
     RowBox[{
      RowBox[{"Apply", "[", "Sequence", "]"}], "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", "n"}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 CellLabel->"In[64]:=",ExpressionUUID->"e5edde49-7148-4ceb-b119-ae7fbff15319"],

Cell[BoxData[
 RowBox[{
  RowBox[{"polinomios", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{"Expand", "@", 
      RowBox[{"Fold", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"X", "#1"}], "+", "#2"}], "&"}], ",", 
        RowBox[{"Reverse", "@", "#"}]}], "]"}]}], "&"}], "]"}], "@", 
   RowBox[{"binarios", "[", "n", "]"}]}]}]], "Input",
 CellLabel->"In[74]:=",ExpressionUUID->"0a05b334-881c-4337-85c1-4d06abbd523d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sindrome", "[", "poly_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"PolynomialMod", "[", 
     RowBox[{"#", ",", "2"}], "]"}], "&"}], "@", 
   RowBox[{"PolynomialRemainder", "[", 
    RowBox[{"poly", ",", "g", ",", "X"}], "]"}]}]}]], "Input",
 CellLabel->"In[73]:=",ExpressionUUID->"bb853320-dfcf-4a50-be79-5c53fcfa473b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sindmap", "=", 
     RowBox[{"Association", "[", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Scan", "[", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", "erro", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"!", 
              RowBox[{"KeyExistsQ", "[", 
               RowBox[{"sindmap", ",", 
                RowBox[{"sindrome", "@", "erro"}]}], "]"}]}], "\[Or]", 
             "\[IndentingNewLine]", 
             RowBox[{"(", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"First", "@", 
                 RowBox[{"sindmap", "[", 
                  RowBox[{"sindrome", "@", "erro"}], "]"}]}], "===", "0"}], 
               "\[And]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Last", "@", 
                 RowBox[{"sindmap", "[", 
                  RowBox[{"sindrome", "@", "erro"}], "]"}]}], 
                "\[GreaterEqual]", " ", 
                RowBox[{"Length", "[", 
                 RowBox[{"sindrome", "@", "erro"}], "]"}]}]}], 
              "\[IndentingNewLine]", ")"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"sindmap", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"sindmap", ",", 
               RowBox[{
                RowBox[{"sindrome", "[", "erro", "]"}], "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Coefficient", "[", 
                   RowBox[{"erro", ",", "X", ",", "0"}], "]"}], ",", 
                  RowBox[{"Length", "@", "erro"}]}], "}"}]}]}], "]"}]}]}], 
           "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], 
        "]"}], "@", 
       RowBox[{"SortBy", "[", 
        RowBox[{"#", ",", "Length"}], "]"}]}], "&"}], "@", 
     RowBox[{"polinomios", "[", "12", "]"}]}], ";", "\[IndentingNewLine]", 
    "sindmap"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[88]:=",ExpressionUUID->"3aff334d-d96e-466d-a840-a0f1e3b8d9f4"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"1", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"1", "+", 
     SuperscriptBox["X", "2"], "+", 
     SuperscriptBox["X", "3"]}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"X", "+", 
     SuperscriptBox["X", "3"], "+", 
     SuperscriptBox["X", "4"]}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"1", "+", 
     SuperscriptBox["X", "3"], "+", 
     SuperscriptBox["X", "4"]}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"1", "+", "X", "+", 
     SuperscriptBox["X", "2"], "+", 
     SuperscriptBox["X", "3"], "+", 
     SuperscriptBox["X", "4"]}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"1", "+", "X", "+", 
     SuperscriptBox["X", "4"]}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"1", "+", "X", "+", 
     SuperscriptBox["X", "3"]}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"X", "+", 
     SuperscriptBox["X", "2"], "+", 
     SuperscriptBox["X", "4"]}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"1", "+", "X"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"1", "+", 
     SuperscriptBox["X", "2"]}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"1", "+", 
     SuperscriptBox["X", "3"]}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"1", "+", 
     SuperscriptBox["X", "4"]}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["X", "2"], "+", 
     SuperscriptBox["X", "3"]}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"1", "+", "X", "+", 
     SuperscriptBox["X", "2"], "+", 
     SuperscriptBox["X", "3"]}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"1", "+", 
     SuperscriptBox["X", "2"], "+", 
     SuperscriptBox["X", "3"], "+", 
     SuperscriptBox["X", "4"]}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"1", "+", "X", "+", 
     SuperscriptBox["X", "3"], "+", 
     SuperscriptBox["X", "4"]}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"X", "+", 
     SuperscriptBox["X", "2"], "+", 
     SuperscriptBox["X", "3"], "+", 
     SuperscriptBox["X", "4"]}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"1", "+", "X", "+", 
     SuperscriptBox["X", "2"], "+", 
     SuperscriptBox["X", "4"]}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["X", "3"], "+", 
     SuperscriptBox["X", "4"]}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"X", "+", 
     SuperscriptBox["X", "4"]}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"X", "+", 
     SuperscriptBox["X", "3"]}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"1", "+", "X", "+", 
     SuperscriptBox["X", "2"]}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"1", "+", 
     SuperscriptBox["X", "2"], "+", 
     SuperscriptBox["X", "4"]}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"X", "+", 
     SuperscriptBox["X", "2"], "+", 
     SuperscriptBox["X", "3"]}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{
    SuperscriptBox["X", "3"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{
    SuperscriptBox["X", "2"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["X", "2"], "+", 
     SuperscriptBox["X", "3"], "+", 
     SuperscriptBox["X", "4"]}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{
    SuperscriptBox["X", "4"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"X", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"X", "+", 
     SuperscriptBox["X", "2"]}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4"}], "}"}]}], ",", 
   RowBox[{"0", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["X", "2"], "+", 
     SuperscriptBox["X", "4"]}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4"}], "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[88]=",ExpressionUUID->"589eb32f-d9d4-4c39-a91c-71c0a2286a29"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Coefficient", "[", 
  RowBox[{
   RowBox[{"10", "+", "x", "+", 
    SuperscriptBox["x", "2"]}], ",", "x", ",", "0"}], "]"}]], "Input",
 CellLabel->"In[86]:=",ExpressionUUID->"ad050449-1c37-4cb4-9625-dd180dad91e2"],

Cell[BoxData["10"], "Output",
 CellLabel->"Out[86]=",ExpressionUUID->"35840afa-34f5-41ac-a5d8-e7b2f8ca52d9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"GF", "[", 
  RowBox[{"5", ",", 
   RowBox[{"1", "+", 
    SuperscriptBox["X", "2"], "+", 
    SuperscriptBox["X", "5"]}]}], "]"}]], "Input",
 CellLabel->"In[29]:=",ExpressionUUID->"8aba5df9-ce9d-469f-b510-ff2c91a8af43"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{
   RowBox[{"Generator", "[", "3", "]"}], "//", "ExpandAsPower"}]}]], "Input",
 CellLabel->"In[41]:=",ExpressionUUID->"b6adc1e8-c630-45d1-b6e1-dd15c504560d"],

Cell[BoxData[
 RowBox[{"1", "+", "X", "+", 
  SuperscriptBox["X", "2"], "+", 
  SuperscriptBox["X", "3"], "+", 
  SuperscriptBox["X", "5"], "+", 
  SuperscriptBox["X", "7"], "+", 
  SuperscriptBox["X", "8"], "+", 
  SuperscriptBox["X", "9"], "+", 
  SuperscriptBox["X", "10"], "+", 
  SuperscriptBox["X", "11"], "+", 
  SuperscriptBox["X", "15"]}]], "Output",
 CellLabel->"Out[41]=",ExpressionUUID->"11bc85a1-837b-4c37-95e5-782a87f871b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "//", "TeXForm"}]], "Input",
 CellLabel->"In[42]:=",ExpressionUUID->"5aaa288c-b2a5-4503-8787-6b29aefd7ed0"],

Cell["X^{15}+X^{11}+X^{10}+X^9+X^8+X^7+X^5+X^3+X^2+X+1", "Output",
 CellLabel->
  "Out[42]//TeXForm=",ExpressionUUID->"730316b7-8c81-4d94-8393-ca70ca46b0d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TeXForm", "@", 
  RowBox[{"HoldForm", "[", "\[IndentingNewLine]", 
   RowBox[{
    FractionBox[
     RowBox[{"31", "-", "15"}], "31"], "\[TildeEqual]", "0.52", 
    "\[TildeEqual]", 
    FractionBox["4", "7"], "\[TildeEqual]", "  ", "0.57"}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->"In[40]:=",ExpressionUUID->"7c80607d-bc0e-4f53-b2d9-c0271aa32ffd"],

Cell["\\frac{31-15}{31}\\simeq 0.52\\simeq \\frac{4}{7}\\simeq 0.57", "Output",
 CellLabel->
  "Out[40]//TeXForm=",ExpressionUUID->"e5aab378-dfd7-445d-a28d-3c5ab13eaa9f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"img", "=", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
586djIyMq1evfvvtt6mpqa1t4yQcl5eXT05OBqmaPn06Uhn8EDMqTqjNNe4X
yOfHex6/AEJjquQdFlzQ2bl0Gq3c8n743Dl3N611OqidefodpjWVL9Ko9ZwV
WhGIr4r/DE2gBXpjePUDnXcFqAxoxHdsYIXM2t8xk5KSOnXqFPYYRGH58uXY
YyqVCq327NmDPS0pKYHmYWFhrZ9VxtvbG3sJJAOegmZhTxUVFdevX8/qkF1l
QEqwx3Q6HbyShYUFPIZ/QZhYQ7qVlRVSGfwQM6oOoRdG1179w13NAITmtqK3
hWMitZMNNUB9aGjS0qWP160w2yEXcNScmXJTP7guopjeeSsEgr8hmsqsWbMm
g43Hjx9jKgPycfHixVmzZo0bNw50ZMiQIVu3bsVagSgcPXqU1cnEiRMNDQ2x
x6AL0NzZ2bn1s8qUlTHve9jY2AgICLBanT9/ft68eawO2VWG1Rvw559/Xrhw
AR6cOHFi1apVrOPx8fFIZfBDzKg6pTKbYvjHW7WrIDS3FL0VrgdmlHa6oaa5
uDhr61a3v5YYbd1gu+dInDozL80n8xhK59twEAg+ZqDcMQPrAd7h0aNHcXFx
oD7gZVhnciw8Zi8x2cpWvJJjIYGtre3333/POk1PT2/OnDntO+ToDc7BSjYj
lekJxIyKG+XpLddnuKjewIRGXMPjnn9mZ6aGRqEU6+uHzJtjvnm90baNrw+f
z9D0YqwKOBtY7ZxJa+p0xRoCwZcMlNn/jRs3HjhwADtIo9GmTZvWvypjYWHx
448/ksnMNavW1tZIZfBDzKi64FNyy5Vpb1SNQWiMFL2XnHLbfCeYi6mpfv06
bt48O8lVN7dJme/c7nGGeQOt0CC0sfMVawgE/zFQVObkyZMTJkwICQmBaA8d
OjRmzJj+VRls9n/v3r0Qj6en54wZM6Bz8Fm99rvoPkhleE5RbPNlEadjJgyh
UfJedMptmo47F1PTlJKSvmbtG/GlN7duYGiN8uEPOi8xral4/JFa20HFAQSC
/xgoKlNZWQkvjRo1avz48bq6ujC896/KtLatZP7zzz+HDRu2YMGCp0+fQufY
8rP+AqlMX1AQSbkk/PKYOWMxwFGfhafdJmm+3WQOpqbjbbxUEilfUSlg4TyT
LRIgNDd2b7qnr5erychLU6AXXB/ZacUBBIJvIJTKDFweP348dOjQxsZOU8f3
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
zrwML3/xm5fVkhUfRmGmRvJ2YHIRro+4hlKjG6wLpuaIqXyyjgdW6LnaPZuO
b/sPguAQR2Va2xyBiooKjLHDhg0DXyMjI+Pn54e9xP7lPzc3FwQCHI2AgMDC
hQsjIiJaua5kNjAwgD6HDh06ceJE1k25bq1khoFUWlqa46CDg8O8efO+++67
n376CUJNSWFW7oCBF6JlRc4OHPzmv3Sobh2qjLy8PAH3y3h4eCgoKLx79w4U
39nZefz48adOneqyFVIZ3lJXSrvxx2vV2yA0j8+Fkhtb8DSi02ihh/Zj9c5i
Xzl+8ZsztvzHFc1pMzVTtd1MvNNxmprAgsDVz1cvtV7y8PJNpqm5GUnGt14O
QWQIpTKERVtbW0REBOeoCOZo7NixVVW9WQYdRHD27NkgwVzOIcIdM0NDwylT
pnR5GlIZnlMQ1aAnbKfsCELjdjceZ0pkWn292xZpbMlZfkxUT96/tLbpsH0k
ZmqkTANTSnB91rWUWr0QPTA1h8x2Jeq6M03N2yw6joQ2CMKCVAYPqampgoKC
gwYNUlRU7PLk06dPw2Dbi+8ObwpvDTYhNjaWy2lEUBkdHZ0FCxZ0+BKZTK75
DLZYAqkMb4l++ElrwV1FTxCaSPccnI0ohYVP2pacmW2XJn0q6cn7g6l5E1v4
pz7T1Jj7ZrTgMzUhhSFrX6wVfbDY9ooh09TciCTn4M2EgyAaSGVwAn8yRUVF
paV4p1N7EXjTwsJCVp6Bzuh3lcnIyBgzZsz9+/c7fFVPT4/jbiFSGZ7jejL5
zBbGSgAlnzx85ZsBUkT4fWmG0DxQ2E5p6mKqsUtKa5oO2jFNzeY7wdnluOaJ
6ih1F0MvgqnZb7YjQfct09S4ZNLwlWxDEAqkMnwDj1RGU1Pzm05gTUW1tqXH
EREROXjwYGf9IC/TD7RQWq3X+p7QZJRvPulfU45XMgqfPDb9Zz0IzavTqj2v
qgw9vIgqmHXeE4Tmd113u5AcGr47eOHF4etfrl/yYNGDK9cwU1Ns+IGc1ZuJ
cBF9AFIZvoFHKlNWVpbSCazlZODypk2btmfPni4NV29FhcBLbQnV8I/nxyxA
aJ5dwlu+GUjSO2ckx0g+E2xp3iuBFFY37rIKw0wNPICneFo1NDdcDr8Mpmaf
+bZ4XVdMa6qdkakZSCCV4Rv6644ZuBiQmB07dlBx77NAKtOn5EfUnp/+QNkJ
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
AAAAAAAAAAAAAAAAAAAAAOCu/j85rZ1i
     "], {{0, 412}, {546, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{546, 412},
   PlotRange->{{0, 546}, {0, 412}}]}]], "Input",
 CellLabel->"In[43]:=",ExpressionUUID->"34764208-3827-4f29-bd2c-b8532d427a21"],

Cell[BoxData[
 GraphicsBox[{
   TagBox[RasterBox[CompressedData["
1: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
586djIyMq1evfvvtt6mpqa1t4yQcl5eXT05OBqmaPn06Uhn8EDMqTqjNNe4X
yOfHex6/AEJjquQdFlzQ2bl0Gq3c8n743Dl3N611OqidefodpjWVL9Ko9ZwV
WhGIr4r/DE2gBXpjePUDnXcFqAxoxHdsYIXM2t8xk5KSOnXqFPYYRGH58uXY
YyqVCq327NmDPS0pKYHmYWFhrZ9VxtvbG3sJJAOegmZhTxUVFdevX8/qkF1l
QEqwx3Q6HbyShYUFPIZ/QZhYQ7qVlRVSGfwQM6oOoRdG1179w13NAITmtqK3
hWMitZMNNUB9aGjS0qWP160w2yEXcNScmXJTP7guopjeeSsEgr8hmsqsWbMm
g43Hjx9jKgPycfHixVmzZo0bNw50ZMiQIVu3bsVagSgcPXqU1cnEiRMNDQ2x
x6AL0NzZ2bn1s8qUlTHve9jY2AgICLBanT9/ft68eawO2VWG1Rvw559/Xrhw
AR6cOHFi1apVrOPx8fFIZfBDzKg6pTKbYvjHW7WrIDS3FL0VrgdmlHa6oaa5
uDhr61a3v5YYbd1gu+dInDozL80n8xhK59twEAg+ZqDcMQPrAd7h0aNHcXFx
oD7gZVhnciw8Zi8x2cpWvJJjIYGtre3333/POk1PT2/OnDntO+ToDc7BSjYj
lekJxIyKG+XpLddnuKjewIRGXMPjnn9mZ6aGRqEU6+uHzJtjvnm90baNrw+f
z9D0YqwKOBtY7ZxJa+p0xRoCwZcMlNn/jRs3HjhwADtIo9GmTZvWvypjYWHx
448/ksnMNavW1tZIZfBDzKi64FNyy5Vpb1SNQWiMFL2XnHLbfCeYi6mpfv06
bt48O8lVN7dJme/c7nGGeQOt0CC0sfMVawgE/zFQVObkyZMTJkwICQmBaA8d
OjRmzJj+VRls9n/v3r0Qj6en54wZM6Bz8Fm99rvoPkhleE5RbPNlEadjJgyh
UfJedMptmo47F1PTlJKSvmbtG/GlN7duYGiN8uEPOi8xral4/JFa20HFAQSC
/xgoKlNZWQkvjRo1avz48bq6ujC896/KtLatZP7zzz+HDRu2YMGCp0+fQufY
8rP+AqlMX1AQSbkk/PKYOWMxwFGfhafdJmm+3WQOpqbjbbxUEilfUSlg4TyT
LRIgNDd2b7qnr5erychLU6AXXB/ZacUBBIJvIJTKDFweP348dOjQxsZOU8f3
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
zrwML3/xm5fVkhUfRmGmRvJ2YHIRro+4hlKjG6wLpuaIqXyyjgdW6LnaPZuO
b/sPguAQR2Va2xyBiooKjLHDhg0DXyMjI+Pn54e9xP7lPzc3FwQCHI2AgMDC
hQsjIiJaua5kNjAwgD6HDh06ceJE1k25bq1khoFUWlqa46CDg8O8efO+++67
n376CUJNSWFW7oCBF6JlRc4OHPzmv3Sobh2qjLy8PAH3y3h4eCgoKLx79w4U
39nZefz48adOneqyFVIZ3lJXSrvxx2vV2yA0j8+Fkhtb8DSi02ihh/Zj9c5i
Xzl+8ZsztvzHFc1pMzVTtd1MvNNxmprAgsDVz1cvtV7y8PJNpqm5GUnGt14O
QWQIpTKERVtbW0REBOeoCOZo7NixVVW9WQYdRHD27NkgwVzOIcIdM0NDwylT
pnR5GlIZnlMQ1aAnbKfsCELjdjceZ0pkWn292xZpbMlZfkxUT96/tLbpsH0k
ZmqkTANTSnB91rWUWr0QPTA1h8x2Jeq6M03N2yw6joQ2CMKCVAYPqampgoKC
gwYNUlRU7PLk06dPw2Dbi+8ObwpvDTYhNjaWy2lEUBkdHZ0FCxZ0+BKZTK75
DLZYAqkMb4l++ElrwV1FTxCaSPccnI0ohYVP2pacmW2XJn0q6cn7g6l5E1v4
pz7T1Jj7ZrTgMzUhhSFrX6wVfbDY9ooh09TciCTn4M2EgyAaSGVwAn8yRUVF
paV4p1N7EXjTwsJCVp6Bzuh3lcnIyBgzZsz9+/c7fFVPT4/jbiFSGZ7jejL5
zBbGSgAlnzx85ZsBUkT4fWmG0DxQ2E5p6mKqsUtKa5oO2jFNzeY7wdnluOaJ
6ih1F0MvgqnZb7YjQfct09S4ZNLwlWxDEAqkMnwDj1RGU1Pzm05gTUW1tqXH
EREROXjwYGf9IC/TD7RQWq3X+p7QZJRvPulfU45XMgqfPDb9Zz0IzavTqj2v
qgw9vIgqmHXeE4Tmd113u5AcGr47eOHF4etfrl/yYNGDK9cwU1Ns+IGc1ZuJ
cBF9AFIZvoFHKlNWVpbSCazlZODypk2btmfPni4NV29FhcBLbQnV8I/nxyxA
aJ5dwlu+GUjSO2ckx0g+E2xp3iuBFFY37rIKw0wNPICneFo1NDdcDr8Mpmaf
+bZ4XVdMa6qdkakZSCCV4Rv6644ZuBiQmB07dlBx77NAKtOn5EfUnp/+QNkJ
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
AAAAAAAAAAAAAAAAAAAAAOCu/j85rZ1i
     "], {{0, 412}, {546, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False], 
   {StrokeForm[RGBColor[0.55, 0.45, 0.45]], EdgeForm[GrayLevel[0]], EdgeForm[
    None], LineBox[{{112., 29.00000000000005}, {114., 395.00000000000006`}}]}, 
   {StrokeForm[RGBColor[0.55, 0.45, 0.45]], EdgeForm[GrayLevel[0]], EdgeForm[
    None], LineBox[{{194., 29.00000000000005}, {196., 395.00000000000006`}}]}, 
   {StrokeForm[RGBColor[0.55, 0.45, 0.45]], EdgeForm[GrayLevel[0]], EdgeForm[
    None], LineBox[{{154., 29.00000000000005}, {156., 395.00000000000006`}}]}, 
   {StrokeForm[RGBColor[0.55, 0.45, 0.45]], EdgeForm[GrayLevel[0]], EdgeForm[
    None], LineBox[{{277., 28.00000000000005}, {279., 394.00000000000006`}}]}, 
   {StrokeForm[RGBColor[0.55, 0.45, 0.45]], EdgeForm[GrayLevel[0]], EdgeForm[
    None], LineBox[{{301., 28.00000000000005}, {303., 394.00000000000006`}}]}},
  DefaultBaseStyle->"ImageGraphics",
  ImagePadding->{{0., 0.}, {0., 0.}},
  ImageSizeRaw->{546, 412},
  PlotRange->{{0., 546.}, {0., 412.}},
  PlotRangePadding->Automatic]], \
"Input",ExpressionUUID->"0a22a20d-3999-4cf0-93ed-db4e050d2315"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1336, 739},
WindowMargins->{{0, Automatic}, {0, Automatic}},
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 78, 0, 98, "Title",ExpressionUUID->"b4ea0157-5618-4efd-83bb-25db5159cbe5"],
Cell[CellGroupData[{
Cell[683, 26, 242, 5, 69, "Chapter",ExpressionUUID->"413a8c52-f5fc-4e8f-a5bb-fcd0b5061987"],
Cell[CellGroupData[{
Cell[950, 35, 267, 7, 65, "Subchapter",ExpressionUUID->"8e839a42-3b08-42d6-89b5-f1d6feef0d6a"],
Cell[1220, 44, 145, 3, 31, "Input",ExpressionUUID->"755843da-07db-4559-b935-563c81832484"],
Cell[1368, 49, 226, 6, 33, "Input",ExpressionUUID->"89d99013-ef95-456a-8f59-d6d2543b92e2"],
Cell[1597, 57, 199, 5, 31, "Input",ExpressionUUID->"9e474936-e1d5-4a57-a624-50ac45e848e5"],
Cell[1799, 64, 224, 5, 31, "Input",ExpressionUUID->"de30c1f6-259c-49be-84ae-a4b00462283c"],
Cell[2026, 71, 195, 5, 31, "Input",ExpressionUUID->"44ad576a-1d7f-497a-981c-4b4564810939"],
Cell[2224, 78, 177, 3, 31, "Input",ExpressionUUID->"365244d7-baf0-442d-bba4-7e7e1e7a87e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2438, 86, 147, 1, 65, "Subchapter",ExpressionUUID->"1a082306-eda4-45eb-a1ba-b16f9794c23b"],
Cell[2588, 89, 518, 13, 31, "Input",ExpressionUUID->"b1644d01-cdf2-453c-9b3f-3e4be7f5fa63"],
Cell[3109, 104, 906, 21, 197, "Input",ExpressionUUID->"a11395cc-cc28-4739-bac2-98510d63ba9e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4052, 130, 158, 2, 65, "Subchapter",ExpressionUUID->"3ee53f87-efa5-465d-8916-e86554605a8c"],
Cell[4213, 134, 439, 12, 31, "Input",ExpressionUUID->"322f6bf6-cdea-4767-985d-09dab0f3324e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4689, 151, 303, 6, 65, "Subchapter",ExpressionUUID->"e0164b14-cd7f-4337-8066-56d30be20ee3"],
Cell[4995, 159, 792, 20, 124, "Input",ExpressionUUID->"af765b0d-f7c3-4e46-a5e9-abecd9dfef97"],
Cell[5790, 181, 398, 8, 124, "Input",ExpressionUUID->"8061ca20-9562-47ad-aa68-6f8a8fbfcbca"],
Cell[6191, 191, 2802, 68, 449, "Input",ExpressionUUID->"78cd737f-4aa6-48e2-b81f-a5f66b5d64e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9030, 264, 400, 11, 65, "Subchapter",ExpressionUUID->"d4d9df03-1ce4-466e-9ed3-9e0e77b8977c"],
Cell[9433, 277, 887, 27, 31, "Input",ExpressionUUID->"40590dc8-06ec-4134-8cc8-83bab33a1596"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10357, 309, 128, 0, 65, "Subchapter",ExpressionUUID->"bf5897f1-15de-43a8-89c3-3beb77ca3cd5"],
Cell[10488, 311, 396, 11, 31, "Input",ExpressionUUID->"f14cdd4a-46f7-41b6-b996-5c20b2435c57"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10921, 327, 143, 1, 65, "Subchapter",ExpressionUUID->"fb374a62-8ddd-4baf-9085-dc48d0a1a21e"],
Cell[11067, 330, 2953, 76, 354, "Input",ExpressionUUID->"cbf8084f-48fd-43ee-9b28-e64fdc5fbc0f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14057, 411, 113, 0, 65, "Subchapter",ExpressionUUID->"d24d9937-11ff-465d-ab6d-e4d5c68e86cc"],
Cell[14173, 413, 280, 7, 31, "Input",ExpressionUUID->"aed7d71f-9843-4d22-9e15-03b854e072ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14490, 425, 115, 0, 65, "Subchapter",ExpressionUUID->"c1667fb5-521e-4250-9754-5ca184d4bd6b"],
Cell[14608, 427, 345, 9, 33, "Input",ExpressionUUID->"358d75c2-6ea8-4747-bd47-2e86b61fdbac"],
Cell[14956, 438, 180, 4, 31, "Input",ExpressionUUID->"e9868cc0-010b-46fa-9bea-8fcab84bdc5b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15185, 448, 77, 0, 69, "Chapter",ExpressionUUID->"fb4e39ff-4acc-4eec-ab70-451d45695f3d"],
Cell[CellGroupData[{
Cell[15287, 452, 102, 0, 65, "Subchapter",ExpressionUUID->"e64dad3f-ab00-4d94-84ea-0a730d4f0b7b"],
Cell[15392, 454, 255, 6, 31, "Input",ExpressionUUID->"f753dc44-4086-4253-80b2-5514eec5c3e7"],
Cell[15650, 462, 505, 14, 39, "Input",ExpressionUUID->"c8828783-be32-4bbe-888c-2fe3d8567145"],
Cell[16158, 478, 358, 9, 39, "Input",ExpressionUUID->"5a09cc54-bdc5-4ab0-94e2-11a8e3c05da9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16553, 492, 93, 0, 65, "Subchapter",ExpressionUUID->"060d4e3f-c392-4514-b696-2a78fc5349fc"],
Cell[16649, 494, 481, 13, 39, "Input",ExpressionUUID->"9841ac3d-9079-4db8-9e9c-870fcae5fc7b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17167, 512, 108, 0, 65, "Subchapter",ExpressionUUID->"83652b27-759f-4b0b-9ada-59c5d5faad42"],
Cell[CellGroupData[{
Cell[17300, 516, 130, 2, 71, "Subsection",ExpressionUUID->"baa69a5f-9caa-4dca-bd9d-2fbecb7b0741"],
Cell[17433, 520, 900, 25, 55, "Input",ExpressionUUID->"e858c434-9b32-4a5d-ad2c-abf40309c307"],
Cell[18336, 547, 818, 21, 47, "Input",ExpressionUUID->"56da5c4c-7cb8-4340-a999-8220818c94a4"],
Cell[19157, 570, 372, 10, 47, "Input",ExpressionUUID->"fb744143-6dbf-4d89-bd73-b278207fbb0a"],
Cell[19532, 582, 501, 14, 47, "Input",ExpressionUUID->"bc602787-753a-47df-842a-89a1afb157ff"],
Cell[20036, 598, 5537, 124, 543, "Input",ExpressionUUID->"9e90abe9-6e7a-4828-8d4c-81c21a5e1bc5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25610, 727, 101, 0, 55, "Subsection",ExpressionUUID->"2f70bfcd-bfb2-4efb-b121-8368a796f2bd"],
Cell[25714, 729, 7456, 171, 650, "Input",ExpressionUUID->"42677bb7-5465-4fc6-b0f5-a783bdd94844"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[33243, 908, 103, 0, 98, "Title",ExpressionUUID->"b5bfd150-192c-4704-8366-905287eaa879"],
Cell[CellGroupData[{
Cell[33371, 912, 83, 0, 65, "Subchapter",ExpressionUUID->"cf59c770-8eb4-49f2-9d8a-bc51aaabef1b"],
Cell[33457, 914, 243, 6, 39, "Input",ExpressionUUID->"cf257589-7f75-429f-860a-15087a541000"],
Cell[CellGroupData[{
Cell[33725, 924, 164, 3, 31, "Input",ExpressionUUID->"763dc033-5fab-465a-aee3-fcc3fc8f61a0"],
Cell[33892, 929, 584, 17, 40, "Output",ExpressionUUID->"1d5fe9f8-f014-4fd6-8625-b6a4dbfe11b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34513, 951, 436, 12, 39, "Input",ExpressionUUID->"242af9ef-a6df-4a65-a225-d7dac404b4a8"],
Cell[34952, 965, 187, 4, 37, "Output",ExpressionUUID->"94348d3d-dd2e-45cc-83a8-c9841392d79d"]
}, Open  ]],
Cell[35154, 972, 183, 4, 31, "Input",ExpressionUUID->"8b50e74e-fbd9-4dc5-aee0-0a73ddd5c685"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35374, 981, 141, 1, 65, "Subchapter",ExpressionUUID->"c3a2f358-af63-4f7f-9e61-1befc84906e6"],
Cell[35518, 984, 339, 7, 35, "Text",ExpressionUUID->"108f1a67-f95f-4573-8b89-6d44475efc6d"],
Cell[35860, 993, 1524, 44, 69, "Input",ExpressionUUID->"970cbe56-22d8-4ed6-8ec3-804ddac356cd"],
Cell[CellGroupData[{
Cell[37409, 1041, 1423, 37, 230, "Input",ExpressionUUID->"cb16a664-38cb-4d8b-9dcc-50144fbac68f"],
Cell[38835, 1080, 1406, 44, 67, "Output",ExpressionUUID->"658c22b9-8920-4cda-ae8a-95fe491e9672"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40278, 1129, 1077, 31, 82, "Input",ExpressionUUID->"61ef32aa-3be7-46f0-a31c-b7ab123c5880"],
Cell[41358, 1162, 9314, 173, 326, 1788, 49, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"fdcf1470-a369-4ec0-b113-fe6f090a883f"]
}, Open  ]],
Cell[50687, 1338, 1976, 52, 326, "Input",ExpressionUUID->"c285c4c3-2682-42b2-9345-34f34f645d26"],
Cell[CellGroupData[{
Cell[52688, 1394, 160, 4, 31, "Input",ExpressionUUID->"dd0dafff-a37b-4309-8f52-ff0d7806873f"],
Cell[52851, 1400, 129, 2, 35, "Output",ExpressionUUID->"7d8c1501-faec-4468-8ed3-ecfecfc471b2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[53029, 1408, 140, 1, 65, "Subchapter",ExpressionUUID->"083ea47b-6b50-4000-88d7-bae43096d722"],
Cell[CellGroupData[{
Cell[53194, 1413, 115, 0, 55, "Subsection",ExpressionUUID->"df7db2eb-3885-4cfd-8d9d-132a50640e04"],
Cell[53312, 1415, 243, 6, 39, "Input",ExpressionUUID->"21fe9d26-920e-419f-a8d0-42b232be6321"],
Cell[53558, 1423, 183, 4, 31, "Input",ExpressionUUID->"00e2cf21-85d0-462e-bdd8-ceec7cdcb6ef"],
Cell[CellGroupData[{
Cell[53766, 1431, 375, 11, 39, "Input",ExpressionUUID->"3ae8acc6-d760-428c-9b6b-c9c4598cb77a"],
Cell[54144, 1444, 157, 4, 37, "Output",ExpressionUUID->"337f956e-9d9f-49cd-9162-585eb045c444"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54338, 1453, 370, 10, 39, "Input",ExpressionUUID->"662cbfbf-c20b-40d9-9490-9b35a0526688"],
Cell[CellGroupData[{
Cell[54733, 1467, 240, 6, 33, "Echo",ExpressionUUID->"481c13a0-39a6-4c5b-94de-bad6e5204f67"],
Cell[54976, 1475, 272, 7, 33, "Echo",ExpressionUUID->"73ed90df-cf78-49b0-a9ba-722389367e1b"],
Cell[55251, 1484, 309, 8, 33, "Echo",ExpressionUUID->"3fe1fb2b-308d-4a52-8cc9-7f65dd3ff239"],
Cell[55563, 1494, 341, 9, 33, "Echo",ExpressionUUID->"fcb3dd10-378f-4f4d-9d15-fdc7ed474f12"],
Cell[55907, 1505, 466, 13, 33, "Echo",ExpressionUUID->"6363322d-e141-447e-98c9-95d043d5b679"],
Cell[56376, 1520, 396, 11, 33, "Echo",ExpressionUUID->"e2b6b58c-13f4-4d16-92b3-851bc13cbb54"],
Cell[56775, 1533, 562, 16, 33, "Echo",ExpressionUUID->"84600c84-d7b9-45c5-a059-31a81053eb94"],
Cell[57340, 1551, 563, 16, 33, "Echo",ExpressionUUID->"ebd66a8b-162b-4504-9b2b-b209e3909834"],
Cell[57906, 1569, 502, 14, 33, "Echo",ExpressionUUID->"2f15eeae-5252-421b-93e3-ba0d4e8e0169"],
Cell[58411, 1585, 377, 11, 29, "Echo",ExpressionUUID->"b46703ed-f807-4fa1-8d3a-9ebd0a06da8a"]
}, Open  ]],
Cell[58803, 1599, 163, 3, 37, "Output",ExpressionUUID->"b075372f-ed0d-4cfc-9eb9-9ef0d070c802"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[59015, 1608, 100, 0, 55, "Subsection",ExpressionUUID->"ead66d36-6e2e-46a3-aba4-599d469205cf"],
Cell[59118, 1610, 217, 5, 39, "Input",ExpressionUUID->"1242cb38-1619-4871-907a-eedf025ce736"],
Cell[CellGroupData[{
Cell[59360, 1619, 164, 3, 31, "Input",ExpressionUUID->"6a8274d0-c1c9-4842-a3ff-17accf8150a1"],
Cell[59527, 1624, 321, 9, 40, "Output",ExpressionUUID->"1d7b4c0c-cd7c-46e5-ae2e-0c74a6248e2f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59885, 1638, 222, 5, 31, "Input",ExpressionUUID->"c10b0955-f34a-4dbe-aace-89a1ab825508"],
Cell[60110, 1645, 341, 8, 40, "Output",ExpressionUUID->"1f1efc9f-e60c-4ba0-be79-3e43d0dda609"]
}, Open  ]],
Cell[60466, 1656, 1418, 40, 39, "Input",ExpressionUUID->"5573e7dd-1b7d-4538-b8e6-08ccdf6f4b96"],
Cell[61887, 1698, 189, 4, 31, "Input",ExpressionUUID->"afaaf5d0-9525-4789-90b4-06abf7694f90"],
Cell[CellGroupData[{
Cell[62101, 1706, 482, 13, 101, "Input",ExpressionUUID->"bfe68861-953b-4f3b-af61-48a1298b4fad"],
Cell[62586, 1721, 125, 1, 35, "Output",ExpressionUUID->"35880e05-fcfe-4cb2-bff2-c60ad317cc1d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62748, 1727, 152, 3, 31, "Input",ExpressionUUID->"8afde62f-79aa-4fc4-8e9f-1cc490de48c3"],
Cell[62903, 1732, 125, 1, 35, "Output",ExpressionUUID->"edfd60e7-ecbe-46d0-9e01-bb9dcceb936f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63065, 1738, 197, 3, 45, "Subsubsection",ExpressionUUID->"d3d5479f-f8c9-4d3d-a364-d5112b0861e3"],
Cell[63265, 1743, 539, 22, 495, "Text",ExpressionUUID->"c7345178-481a-4f80-83d5-2bd732abdb49"],
Cell[CellGroupData[{
Cell[63829, 1769, 500, 14, 31, "Input",ExpressionUUID->"355791aa-6286-4f09-964e-db517bbc2504"],
Cell[64332, 1785, 221, 5, 37, "Output",ExpressionUUID->"246df200-3f8a-42a7-b006-004489e4c4db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64590, 1795, 235, 5, 39, "Input",ExpressionUUID->"f8d72eda-d61e-4b9e-993d-551d525cf5e8"],
Cell[64828, 1802, 107, 1, 35, "Output",ExpressionUUID->"8e88f49b-66c3-42b7-b858-9fe2ac949a42"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[64984, 1809, 165, 2, 45, "Subsubsection",ExpressionUUID->"202a6a1c-bfc6-410d-8189-580a5ef8a6b6"],
Cell[CellGroupData[{
Cell[65174, 1815, 1115, 35, 55, "Input",ExpressionUUID->"9e20b622-fb07-49ba-850e-504c43825d07"],
Cell[66292, 1852, 1473, 21, 82, "Output",ExpressionUUID->"3502f1ba-ee70-4197-8935-739e58800511"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[67814, 1879, 110, 0, 45, "Subsubsection",ExpressionUUID->"434487a4-cba4-48d3-b456-b9c348718e5c"],
Cell[67927, 1881, 217, 5, 39, "Input",ExpressionUUID->"cce70f85-0faa-442e-9e23-247a7a9d5943"],
Cell[CellGroupData[{
Cell[68169, 1890, 106, 1, 31, "Input",ExpressionUUID->"81e43b57-c427-44e6-bf84-231031abb7d1"],
Cell[68278, 1893, 221, 5, 37, "Output",ExpressionUUID->"ba75429c-5288-47d5-8450-892f08d126e0"]
}, Open  ]],
Cell[68514, 1901, 554, 17, 31, "Input",ExpressionUUID->"e5edde49-7148-4ceb-b119-ae7fbff15319"],
Cell[69071, 1920, 488, 14, 31, "Input",ExpressionUUID->"0a05b334-881c-4337-85c1-4d06abbd523d"],
Cell[69562, 1936, 363, 9, 31, "Input",ExpressionUUID->"bb853320-dfcf-4a50-be79-5c53fcfa473b"],
Cell[CellGroupData[{
Cell[69950, 1949, 2232, 53, 308, "Input",ExpressionUUID->"3aff334d-d96e-466d-a840-a0f1e3b8d9f4"],
Cell[72185, 2004, 5252, 173, 120, "Output",ExpressionUUID->"589eb32f-d9d4-4c39-a91c-71c0a2286a29"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77474, 2182, 237, 5, 39, "Input",ExpressionUUID->"ad050449-1c37-4cb4-9625-dd180dad91e2"],
Cell[77714, 2189, 108, 1, 35, "Output",ExpressionUUID->"35840afa-34f5-41ac-a5d8-e7b2f8ca52d9"]
}, Open  ]],
Cell[77837, 2193, 243, 6, 39, "Input",ExpressionUUID->"8aba5df9-ce9d-469f-b510-ff2c91a8af43"],
Cell[CellGroupData[{
Cell[78105, 2203, 201, 4, 31, "Input",ExpressionUUID->"b6adc1e8-c630-45d1-b6e1-dd15c504560d"],
Cell[78309, 2209, 438, 11, 37, "Output",ExpressionUUID->"11bc85a1-837b-4c37-95e5-782a87f871b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78784, 2225, 135, 2, 31, "Input",ExpressionUUID->"5aaa288c-b2a5-4503-8787-6b29aefd7ed0"],
Cell[78922, 2229, 157, 2, 50, "Output",ExpressionUUID->"730316b7-8c81-4d94-8393-ca70ca46b0d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79116, 2236, 391, 9, 119, "Input",ExpressionUUID->"7c80607d-bc0e-4f53-b2d9-c0271aa32ffd"],
Cell[79510, 2247, 170, 2, 50, "Output",ExpressionUUID->"e5aab378-dfd7-445d-a28d-3c5ab13eaa9f"]
}, Open  ]],
Cell[79695, 2252, 49372, 814, 83, "Input",ExpressionUUID->"34764208-3827-4f29-bd2c-b8532d427a21"],
Cell[129070, 3068, 50162, 824, 425, InheritFromParent,ExpressionUUID->"0a22a20d-3999-4cf0-93ed-db4e050d2315"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

